[{"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/index.js":"1","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/App.js":"2","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js":"3","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Settings.js":"4","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signin.js":"5","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/reportWebVitals.js":"6","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signup.js":"7","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/About.js":"8","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Newprofile.js":"9","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/firebase.js":"10","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Post.js":"11","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Navbar.js":"12","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Photo.js":"13","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/components/AppDrawer.jsx":"14","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Drafts.js":"15","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/DraftPhoto.js":"16","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Captured.js":"17","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/CapturedPhoto.js":"18"},{"size":1037,"mtime":1637878784373,"results":"19","hashOfConfig":"20"},{"size":3694,"mtime":1637879097082,"results":"21","hashOfConfig":"20"},{"size":9357,"mtime":1638567635795,"results":"22","hashOfConfig":"20"},{"size":142,"mtime":1634168045687,"results":"23","hashOfConfig":"20"},{"size":4717,"mtime":1635375648455,"results":"24","hashOfConfig":"20"},{"size":362,"mtime":1632176691883,"results":"25","hashOfConfig":"20"},{"size":5167,"mtime":1635549254990,"results":"26","hashOfConfig":"20"},{"size":3638,"mtime":1638565073604,"results":"27","hashOfConfig":"20"},{"size":2843,"mtime":1638565073612,"results":"28","hashOfConfig":"20"},{"size":930,"mtime":1638292269990,"results":"29","hashOfConfig":"20"},{"size":20483,"mtime":1638826227745,"results":"30","hashOfConfig":"20"},{"size":3955,"mtime":1638565073607,"results":"31","hashOfConfig":"20"},{"size":14124,"mtime":1638825339511,"results":"32","hashOfConfig":"20"},{"size":8072,"mtime":1638568648629,"results":"33","hashOfConfig":"20"},{"size":1674,"mtime":1638294519045,"results":"34","hashOfConfig":"20"},{"size":10591,"mtime":1638567450151,"results":"35","hashOfConfig":"20"},{"size":2566,"mtime":1638569405684,"results":"36","hashOfConfig":"20"},{"size":13389,"mtime":1638779881680,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rpfx4g",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"40"},"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/index.js",[],["87","88"],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/App.js",["89","90"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { collectPosts, auth } from './firebase'\nimport { onSnapshot, orderBy, query } from 'firebase/firestore';\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { makeStyles } from '@material-ui/core';\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport Navbar from './Navbar';\n\nconst splitTime = (date) => {\n  if(!date) { return [] }\n  date = date.toDate()\n  // const date_elements = [date.getDay(), date.getDate(), date.getMonth(), date.getFullYear(), date.getHours(), date.getMinutes()]\n  return date\n}\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n      if (authUser) {\n        // user logged in\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          // do not update username\n        } else {\n          // NEW USER\n          return updateProfile(authUser, {\n            displayName: username,\n          });\n        }\n\n      } else {\n        // user logged out\n        setUser(null);\n      }\n    })\n    return () => {\n      // some cleanup action\n      unsubscribe();\n    }\n  }, [user, username]);\n\n  // runs piece of code on specific condition\n  useEffect(() => {\n    onSnapshot(query(collectPosts, orderBy('timestamp', 'desc')), (snapshot) => {\n      // when posts changes this code runs\n      console.log(\"Snapshot\", snapshot.docs)\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n\n    })\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"app\">\n\n        {user?.displayName ? (\n          <Navbar user={user} username={user.displayName} ></Navbar>\n        ) : (\n          <Navbar></Navbar>\n        )}\n\n        <br></br>\n        <br></br>\n\n        {/*user?.displayName ? (           \n          <ImageUpload username={user.displayName} />\n\n        ) : (\n          <h3 className=\"upload-login-message\">Login to upload an image...</h3>\n        )*/}\n\n        {\n          posts.map(({ id, post }) => (\n            <div className=\"posts\" >\n              <Post\n                key={id}\n                postId={id}\n                user={user}\n                username={post.username}\n                caption={post.caption}\n                imageUrl={post.imageUrl}\n                iso={post.ISO}\n                cameraType={post.cameraType}\n                fStop={post.fStop}\n                shutterSpeed={post.shutterSpeed}\n                captures={post.captures}\n                focalLength={post.focalLength}\n                lensType={post.lensType}\n                lighting={post.lighting}\n                location={post.location}\n                other={post.other}\n                numComments={post.numComments}\n                timePosted={splitTime(post.timestamp)}\n              />\n            </div>\n          ))\n        }\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blue[500],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: red[500],\n    },\n  },\n});\n\nexport default App;\n","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js",["91","92","93","94","95"],"// import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { storage, collectPosts, collectDrafts } from './firebase';\nimport { ref, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\nimport { serverTimestamp, FieldValue, addDoc } from 'firebase/firestore';\nimport { TextField, Input, LinearProgress, Button, IconButton, Modal, makeStyles } from \"@material-ui/core\"\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport \"./Post.css\"\nimport \"./imageUpload.css\"\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n\nfunction ImageUpload({ username }) {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState('');\n  const [cameraType, setCameraType] = useState('');\n  const [ISO, setISO] = useState(0);\n  const [lensType, setLensType] = useState('');\n  const [fStop, setFStop] = useState(0);\n  const [shutterSpeed, setShutterSpeed] = useState(\"\");\n  const [lighting, setLighting] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [focalLength, setFocalLength] = useState(0);\n  const [other, setOther] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n\n  const fileInput = React.createRef()\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  }\n  \n  const handleDraftUpload = () => {\n    if (!image) {\n      alert('PLEASE MAKE SURE YOU ENTERED AN IMAGE');\n      return;\n    }\n      const uploadTask = uploadBytesResumable(ref(storage, `images/${image.name}`), image);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          // progress function\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n          alert(error.message);\n        },\n        () => {\n            getDownloadURL(ref(storage, `images/${image.name}`))\n            .then(url => {\n              addDoc(collectDrafts, {\n                caption: caption,\n                imageUrl: url,\n                username: username,\n                ISO: ISO,\n                cameraType: cameraType,\n                lensType: lensType,\n                fStop: fStop,\n                shutterSpeed: shutterSpeed,\n                lighting: lighting,\n                location: location,\n                focalLength: focalLength,\n                other: other\n\n              });\n\n              setProgress(0);\n              setCaption(\"\");\n              setImage(null);\n              setCameraType(\"\");\n              setISO(0);\n              setLensType(\"\");\n              setFStop(0);\n              setShutterSpeed(\"\");\n              setLighting(\"\");\n              setLocation(\"\");\n              setFocalLength(0);\n              setOther(\"\");\n              setOpen(true);\n\n            })\n          }\n\n      )\n\n  }\n\n  const handleUpload = () => {\n\n    if (!image || !caption) {\n      alert('PLEASE MAKE SURE YOU ENTERED BOTH IMAGE AND CAPTION')\n    }\n    else {\n\n      const uploadTask = uploadBytesResumable(ref(storage, `images/${image.name}`), image);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          // progress function\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n          alert(error.message);\n        },\n        () => {\n          let time = serverTimestamp(FieldValue)\n          setTimeout(() => {\n            getDownloadURL(ref(storage, `images/${image.name}`))\n            .then(url => {\n              addDoc(collectPosts, {\n                timestamp: time,\n                caption: caption,\n                imageUrl: url,\n                username: username,\n                captures: [],\n                ISO: ISO,\n                cameraType: cameraType,\n                lensType: lensType,\n                fStop: fStop,\n                shutterSpeed: shutterSpeed,\n                lighting: lighting,\n                location: location,\n                focalLength: focalLength,\n                other: other,\n                numComments: 0\n\n              });\n\n              setProgress(0);\n              setCaption(\"\");\n              setImage(\"https://st2.depositphotos.com/1561359/12101/v/950/depositphotos_121012076-stock-illustration-blank-photo-icon.jpg\");\n              setCameraType(\"\");\n              setISO(0);\n              setLensType(\"\");\n              setFStop(0);\n              setShutterSpeed(\"\");\n              setLighting(\"\");\n              setLocation(\"\");\n              setFocalLength(0);\n              setOther(\"\");\n              setOpen(true);\n\n            })\n\n          }, 500)\n          }\n\n      )\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme} className=\"imageupload\">\n\n        <Dialog\n          open={open}\n          onClose={() => setOpen(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n              <img\n                  className=\"app_header_image\"\n                  src=\"LensCleanse.png\"\n                  alt=\"Lens Cleanse\"\n                  width='80'\n                  height='auto'\n                />\n                <h1 className=\"app_header_h1\">Lens Cleanse</h1>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            Your image has been successfully uploaded to Lens Cleanse! \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setOpen(false)}>OK</Button>\n          </DialogActions>\n        </Dialog>\n      <div>\n\n        <progress className=\"imageupload_progress\" value={progress} max=\"100\" />\n        <div className=\"uploadFileComponents\">\n          <TextField id=\"standard-basic\" className=\"imageupload_caption\" label=\"Enter a caption\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setCaption(event.target.value)} value={caption} />\n        </div>\n\n        <div className=\"uploadFileComponents\">\n          <label htmlFor=\"contained-button-file\">\n            <Input className=\"file-input\" accept=\"image/*\" id=\"contained-button-file\" type=\"file\" onChange={handleChange} />\n          </label>\n\n          <div className=\"uploadFile\">\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Camera Type\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setCameraType(event.target.value)} value={cameraType} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter ISO\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setISO(event.target.value)} value={ISO} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Lens\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setLensType(event.target.value)} value={lensType} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter fStop\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setFStop(event.target.value)} value={fStop} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Shutter Speed\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setShutterSpeed(event.target.value)} value={shutterSpeed} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Lighting Details\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setLighting(event.target.value)} value={lighting} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Location\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setLocation(event.target.value)} value={location} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Focal Length\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setFocalLength(event.target.value)} value={focalLength} />\n            <TextField className=\"imageupload_photoInfo_other\" label=\"Enter Other Info\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setOther(event.target.value)} value={other} />\n\n          </div>\n\n          <div className=\"image-upload-buttons\">\n            <button className=\"bottom-buttons\" variant=\"contained\" color=\"primary\" onClick={handleDraftUpload}>\n              Save As Draft\n            </button>\n            <button className=\"bottom-buttons\" variant=\"contained\" color=\"primary\" onClick={handleUpload}>\n              Upload\n            </button>\n          </div>\n        </div>\n\n      </div>\n    </ThemeProvider>\n  )\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blue[500],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: red[500],\n    },\n  },\n});\n\n\nexport default ImageUpload\n","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Settings.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signin.js",["96","97","98","99"],"import React, { useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, updateProfile, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from './firebase'\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport './Signin.css'\n\nfunction Signin() {\n    let history = useHistory();\n\n    const toSignUp = () => {\n        history.push('/signup')\n    }\n\n    const toMain = () => {\n        history.push('/')\n    } \n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [user, setUser] = useState(null);\n    const [signinpassword, setSigninPassword] = useState('');\n    const [signinemail, setSigninEmail] = useState('');\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n          if (authUser) {\n            // user logged in\n            console.log(authUser);\n            setUser(authUser);\n    \n            if (authUser.displayName) {\n              // do not update username\n            } else {\n              // NEW USER\n              return updateProfile(authUser, {\n                displayName: username,\n              });\n            }\n    \n          } else {\n            // user logged out\n            setUser(null);\n          }\n        })\n        return () => {\n          // some cleanup action\n          unsubscribe();\n        }\n      }, [user, username]);\n\n    const signIn = (event) => {\n        event.preventDefault();\n    \n        signInWithEmailAndPassword(auth, signinemail, signinpassword)\n          .catch((error) => alert(error.message))\n\n        if(user) {\n            history.push('/');\n        }\n    }\n\n    const signUp = (event) => {\n        event.preventDefault();\n    \n        createUserWithEmailAndPassword(auth, email, password)\n          .then((authUser) => {\n            return updateProfile(authUser.user, {\n              displayName: username\n            })\n          })\n          .catch((error) => alert(error.message));\n    }\n\n    return(\n        <div className=\"wrap\" >\n            <Navbar></Navbar>\n            <div className=\"login\">\n                <div className=\"sign-in\" style={{ backgroundImage: \"url(/bg.jpg)\" }}>\n                    <form className=\"sign-in-form\">\n                        <div className=\"section\">\n                            <div className=\"heading\">\n                                <h4 className=\"begin\">Log In to </h4>\n                                <h3 className=\"title\"> Lens Cleanse </h3>\n                            </div>\n                        </div>\n                        <br></br>\n                        <div className=\"section\">\n                            <input id=\"user\" type=\"text\" className=\"section-input\" placeholder=\"Email\" value={signinemail} onChange={(e) => setSigninEmail(e.target.value)} ></input>\n                        </div>\n                        <div className=\"section\">\n                            <input id=\"user\" type=\"password\" className=\"section-input\" placeholder=\"Password\" value={signinpassword} onChange={(e) => setSigninPassword(e.target.value)} ></input>\n                        </div>\n                        <div className=\"section\">\n                            <button type=\"submit\" className=\"section-button\" onClick={signIn}> SIGN IN </button>\n                        </div>\n                        <div className=\"section\">\n                            <div className=\"bottom\">\n                                <div className=\"remember\">\n                                    <input className=\"remember-check\" type=\"checkbox\" id=\"remember\" name=\"remember\" value=\"remember\"/>\n                                    <label className=\"remember-me\" for=\"remember\"> Remember Me</label>\n                                </div>\n                                <div className=\"forgot\">\n                                    <a href=\"#forgot\">Forgot Password</a>\n                                </div>\n                            </div>\n\t                    </div>\n                        <br></br>\n                        <br></br>\n                        <div className=\"section\">\n                            <p className=\"textt\">&mdash; Don't Have an Account &mdash;</p>\n                        </div>\n                        <div class=\"section\">\n                            <button className=\"bottom-buttons\" onClick={toSignUp}>SIGN UP</button>\n                            <button className=\"bottom-buttons\" onClick={toMain}>MAIN PAGE</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Signin;","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/reportWebVitals.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signup.js",["100","101","102"],"import React, { useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, updateProfile, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from './firebase'\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { Button, Input, makeStyles, Modal } from '@material-ui/core';\nimport './Signup.css'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 10;\n  const left = 10;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, ${left}%)`,\n  };\n}\n\nfunction Signup() {\n    let history = useHistory();\n\n    const toSignIn = () => {\n        history.push('/login')\n    }\n\n    const toMain = () => {\n        history.push('/')\n    } \n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [user, setUser] = useState(null);\n    const [open, setOpen] = useState(false);\n    const [modalStyle] = React.useState(getModalStyle);\n    const classes = useStyles();\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n          if (authUser) {\n            // user logged in\n            console.log(authUser);\n            setUser(authUser);\n    \n            if (authUser.displayName) {\n              // do not update username\n            } else {\n              // NEW USER\n              return updateProfile(authUser, {\n                displayName: username,\n              });\n            }\n    \n          } else {\n            // user logged out\n            setUser(null);\n          }\n        })\n        return () => {\n          // some cleanup action\n          unsubscribe();\n        }\n      }, [user, username]);\n\n\n    const signUp = (event) => {\n        event.preventDefault();\n    \n        createUserWithEmailAndPassword(auth, email, password)\n          .then((authUser) => {\n            return updateProfile(authUser.user, {\n              displayName: username\n            })\n          })\n          .catch((error) => alert(error.message));     \n    }\n\n    return(\n      <div className=\"wrap\" >\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n        >\n          <div style={modalStyle} className={classes.paper}>\n            <form className=\"app_signup\">\n              <center className='sign_up_heading'>\n                <img\n                  className=\"app_header_image\"\n                  src=\"LensCleanse.png\"\n                  alt=\"Lens Cleanse\"\n                  width='80'\n                  height='auto'\n                />\n                <h1 className=\"app_header_h1\">Lens Cleanse</h1>\n              </center>\n\n              <h4> You have successfully signed up for your Lens Cleanse account! Now you can sign in and start sharing your awesome work! </h4>\n\n            </form>\n          </div>\n        </Modal>\n\n        <Navbar></Navbar>\n        <div className=\"login\">\n            <div className=\"sign-in\" style={{ backgroundImage: \"url(/bg.jpg)\" }}>\n                <form className=\"sign-in-form\">\n                    <div className=\"section\">\n                        <div className=\"heading\">\n                            <h4 className=\"begin\">Sign up for </h4>\n                            <h3 className=\"title\"> Lens Cleanse </h3>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"section\">\n                        <input id=\"user\" type=\"text\" className=\"section-input\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} ></input>\n                    </div>\n                    <div className=\"section\">\n                        <input id=\"user\" type=\"text\" className=\"section-input\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} ></input>\n                    </div>\n                    <div className=\"section\">\n                        <input id=\"user\" type=\"password\" className=\"section-input\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} ></input>\n                    </div>\n                    <div className=\"section\">\n                        <button type=\"submit\" className=\"section-button\" onClick={signUp}> SIGN UP </button>\n                    </div>\n\n                    <br></br>\n                    <br></br>\n                    <div className=\"section\">\n                        <p className=\"textt\">&mdash; Already Have an Account? &mdash;</p>\n                    </div>\n                    <div class=\"section\">\n                        <button className=\"bottom-buttons\" onClick={toSignIn}>SIGN IN</button>\n                        <button className=\"bottom-buttons\" onClick={toMain}>MAIN PAGE</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Signup;","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/About.js",["103","104"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Navbar from './Navbar';\nimport { auth } from './firebase'\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport InstagramIcon from '@mui/icons-material/Instagram';\n\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\n\nfunction About() {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n      if (authUser) {\n        // user logged in\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          // do not update username\n        } else {\n          // NEW USER\n          return updateProfile(authUser, {\n            displayName: username,\n          });\n        }\n\n      } else {\n        // user logged out\n        setUser(null);\n      }\n    })\n    return () => {\n      // some cleanup action\n      unsubscribe();\n    }\n  }, [user, username]);\n  return (\n    <div>\n      <div>\n        {user?.displayName ? (\n          <Navbar user={user} username={user.displayName} ></Navbar>\n        ) : (\n          <Navbar></Navbar>\n        )}\n      </div>\n      <div className={classes.wrapper}>\n        <div className={classes.secondWrappers}>\n          <div className={classes.aboutInfo}>\n            <p>\n              As photographers we long for an app that is dedicated to just us and our professional work where we can share our photos with other photographers. Photographers want to know what goes into other photographers' work and how they create them. Lens cleanse will allow us to learn just that.\n            </p>\n          </div>\n\n          <div>\n            <br />\n            <br />\n            <br />\n            <h2>Contact Us</h2>\n            \n            <p> 63-10 Something Ave, Rego Park, </p>\n            <p> NY 11429</p>\n            <p>info@lenscleanse.com</p>\n            <p>(347) 500- 4000</p>\n\n            <p>(646) 200- 9999</p>\n            <div className={classes.icons}>\n              <button className={classes.icons}>\n                <FacebookIcon />\n              </button>\n              <button className={classes.icons}>\n                <TwitterIcon />\n              </button>\n              <button className={classes.icons}>\n                <InstagramIcon />\n              </button>\n            </div>\n          </div>\n\n\n\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    margin: \"0 auto\",\n    width: \"100%\",\n    height: \"800px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundImage: \"url(https://images.unsplash.com/photo-1612144788280-c9096c34486a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80)\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    fontWeight: \"500\",\n    fontSize: 20,\n  },\n  secondWrappers: {\n    flex: 1,\n    width: \"500px\",\n    //border: \"5px solid red\",\n    margin: \"5px 120px\",\n    fontSize: 25,\n    padding: \"35px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"rgba(0, 0, 0, 0.75)\",\n    padding: \"45px\",\n    color: \"white\",\n    lineHeight: \"30px\",\n    fontFamily: \"Cambria\",\n    fontWeight: \"semibold\"\n  },\n  icons: {\n    border: \"none\",\n    backgroundColor: \"transparent\",\n    color: \"white\"\n  },\n  aboutInfo: {\n\n\n  },\n\n}));\n\nexport default About","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Newprofile.js",["105","106","107","108","109","110","111","112","113","114","115","116","117"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { onSnapshot, orderBy, query, Timestamp, where } from 'firebase/firestore';\nimport { collectPosts, auth } from './firebase'\nimport Photo from './Photo';\nimport './Newprofile.css'\n\nconst splitTime = (date) => {\n  if(!date) { return [] }\n  date = date.toDate()\n  const date_elements = [date.getDay(), date.getDate(), date.getMonth(), date.getFullYear(), date.getHours(), date.getMinutes()]\n  return date_elements\n}\n\nfunction NewProfile({ profileusername, profileuser }) {\n  const [username, setUsername] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n\n\n  useEffect(() => {\n    onSnapshot(query(collectPosts, where('username', \"==\", profileusername)), (snapshot) => {\n      // when posts changes this code runs\n      console.log(\"Snapshot\", snapshot.docs)\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n\n    })\n  }, []);\n\n  const getEmail = () => {\n    if (profileuser) {\n      if(profileusername==profileuser.displayName) {\n        return true\n      }\n      else {\n        return false\n      }\n    }\n    else {\n      return false\n    }\n  }\n\n  //! Replace p tags with information from Firebase\n  return (\n    <div>\n      <div className=\"info\">\n\n      {getEmail ? (\n          <h3> Email: {profileusername.toLowerCase()}@gmail.com </h3>\n        ) : (\n          <h3> Email: {profileusername}@gmail.com </h3>\n        )}\n        \n      </div>\n\n      <div className=\"profile-wrapper\">\n        <Grid className=\"profile-posts-container\"> {/* container spacing={0.5} */}\n          {\n            posts.map(({ id, post }) => (\n              <Grid className=\"profile-posts\" >\n                <Photo\n                  className=\"profile-post\"\n                  key={id}\n                  postId={id}\n                  user={profileuser}\n                  username={post.username}\n                  caption={post.caption}\n                  imageUrl={post.imageUrl}\n                  iso={post.ISO}\n                  cameraType={post.cameraType}\n                  fStop={post.fStop}\n                  shutterSpeed={post.shutterSpeed}\n                  captures={post.captures}\n                  focalLength={post.focalLength}\n                  lensType={post.lensType}\n                  lighting={post.lighting}\n                  location={post.location}\n                  other={post.other}\n                  numComments={post.numComments}\n                  timePosted={splitTime(post.timestamp)}\n                />\n              </Grid>\n            ))\n          }\n        </Grid>\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default NewProfile","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/firebase.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Post.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Navbar.js",["143"],"import React, { useState } from 'react';\nimport './Navbar.css';\nimport { useHistory } from 'react-router-dom';\nimport { Form, FormControl } from 'react-bootstrap';\nimport { Button } from '@material-ui/core';\n\nimport AppDrawer from './components/AppDrawer';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport Slide from '@mui/material/Slide';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nimport Dialog from '@mui/material/Dialog';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport NewProfile from './Newprofile';\n\nfunction Navbar({ user, username }) {\n  let history = useHistory();\n\n  const [openProfile, setOpenProfile] = useState(false);\n\n  const profileView = () => {\n    if(openProfile) {\n      setOpenProfile(false)\n    } else {\n      setOpenProfile(true)\n    }    \n  }\n\n  const closeProfile = () => {\n    setOpenProfile(false);\n    history.go(0);\n  }\n\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\n  const toLogin = () => {\n    history.push('/login')\n  }\n\n  const toAbout = () => {\n    history.push('/about')\n  }\n\n  const toHome = () => {\n    history.push('/')\n  }\n\n  return (\n    <div className='navbar'>\n      <Dialog\n        fullScreen\n        open={openProfile}\n        onClose={() => setOpenProfile(false)}\n        TransitionComponent={Transition}\n        className=\"profile-dialog\"\n      >\n        <center className='profile-nav-heading'>\n\n          <div className=\"profile-nav\">\n            <div className=\"profile-nav-left\">\n              <img\n                className=\"app_header_image\"\n                src=\"LensCleanse.png\"\n                alt=\"Lens Cleanse\"\n                width='80'\n                height='auto'\n              />\n              <h1 className=\"app_header_h1\">{username}</h1>\n            </div>\n\n            <IconButton\n                className=\"x-button\"\n                color=\"inherit\"\n                onClick={closeProfile}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n            </IconButton>\n          </div>\n\n        </center>\n\n        <NewProfile profileusername={username} profileuser={user}></NewProfile>\n\n      </Dialog>\n      <a onClick={toHome} alt=\"Go to Homepage\">\n        <div className='logo-and-lc'>\n          <img\n            className=\"navbar-logo\"\n            src=\"LensCleanse.png\"\n            alt=\"Lens Cleanse\"\n            width='75'\n            height='auto'\n          />\n          <h1 className='navbar-lc'>Lens Cleanse</h1>\n        </div>\n      </a>\n\n      <div className='navbar-right'>\n        {/* items aligned to the right of the navbar */}\n\n        <Form className=\"search-bar\">\n          <Button className='search-button' variant=\"outline-success\"><SearchIcon /></Button>\n          <FormControl\n            type=\"search\"\n            placeholder=\"Search\"\n            className=\"search-input\"\n            aria-label=\"Search\"\n          />\n        </Form>\n\n        {user ? (\n          <div className='signed-in'>\n            <Button style={{color: \"#195c79\"}}><NotificationsIcon /></Button>\n            <Button style={{color: \"#195c79\"}}><ChatIcon /></Button>\n            <Button style={{color: \"#195c79\"}} onClick={profileView}><AccountBoxIcon /></Button>\n            <AppDrawer user={user} username={username}></AppDrawer>\n          </div>\n        ) : (\n          // sign in sign up buttons\n          <div className='not-signed-in'>\n            <Button className='signin-button' variant=\"contained\" color=\"primary\" onClick={toLogin}>Sign in<br />Sign up</Button>\n            <Button className='signin-button' variant=\"contained\" color=\"primary\" onClick={toAbout}>About</Button>\n\n          </div>\n        )}\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Photo.js",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/components/AppDrawer.jsx",["175","176","177","178","179","180"],"import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageUpload from '../ImageUpload';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\n\nimport './AppDrawer.css';\nimport { auth } from '../firebase'\nimport { signOut } from \"firebase/auth\";\n\nimport PowerSettingsNewIcon from '@mui/icons-material/PowerSettingsNew';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport CollectionsIcon from '@mui/icons-material/Collections';\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport InsertPhotoIcon from '@mui/icons-material/InsertPhoto';\nimport CameraIcon from '@mui/icons-material/Camera';\nimport InfoIcon from '@mui/icons-material/Info';\nimport NewProfile from '../Newprofile';\nimport Drafts from '../Drafts';\nimport Captured from '../Captured';\n\nfunction AppDrawer({ user, username }) {\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const [open, setOpen] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n  const [openDrafts, setOpenDrafts] = useState(false);\n  const [openCaptured, setOpenCaptured] = useState(false);\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  let history = useHistory();\n\n  const toUpload = () => {\n    setOpen(true)\n  }\n\n  const closeUpload = () => {\n    setOpen(false)\n  }\n\n  const toAbout = () => {\n    history.push('/about')\n  }\n\n  const toSettings = () => {\n    history.push('/settings')\n  }\n\n  const profileView = () => {\n    if(openProfile) {\n      setOpenProfile(false)\n    } else {\n      setOpenProfile(true)\n    }   \n  }\n\n  const closeProfile = () => {\n    setOpenProfile(false);\n    history.go(0);\n  }\n\n  const draftsView = () => {\n    if(openDrafts) {\n      setOpenDrafts(false)\n    } else {\n      setOpenDrafts(true)\n    }   \n  }\n\n  const handleOpenCaptured = () => {\n    setOpenCaptured(!openCaptured);\n  }\n\n  const closeCaptured = () => {\n    setOpenCaptured(false);\n    history.go(0);\n  }\n\n  const closeDrafts = () => {\n    setOpenDrafts(false);\n    history.go(0);\n  }\n\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\n  const list = (anchor) => (\n    <Box\n      className='menu-box'\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List className='menu-list'>\n        {/*<ListItem onClick={profileView} button key={'My Profile'}>\n          <div className='list-item'>\n            <AccountBoxIcon className='icon' />\n            <p> My Profile</p>\n          </div>\n  </ListItem>*/}\n        <ListItem onClick={toUpload} button key={'Upload Image'}>\n          <div className='list-item'>\n            <InsertPhotoIcon className='icon' />\n            <p>Upload Image</p>\n          </div>\n        </ListItem>\n        <ListItem onClick={draftsView} button key={'Drafts'}>\n          <div className='list-item'>\n            <CollectionsIcon className='icon' />\n            <p>Drafts</p>\n          </div>\n        </ListItem>\n        <ListItem onClick={handleOpenCaptured} button key={'Captured'}>\n          <div className='list-item'>\n            <CameraIcon className='icon' />\n            <p>Captured</p>\n          </div>\n        </ListItem>\n        <ListItem button key={'Collaborate'}>\n          <div className='list-item'>\n            <SupervisorAccountIcon className='icon' />\n            <p>Collaborate</p>\n          </div>\n        </ListItem>\n        <ListItem onClick={toSettings} button key={'Settings'}>\n          <div className='list-item'>\n            <SettingsIcon className='icon' />\n            <p>Settings</p>\n          </div>\n        </ListItem>\n        <ListItem onClick={toAbout} button key={'About'}>\n          <div className='list-item'>\n            <InfoIcon className='icon' />\n            <p>About Us</p>\n          </div>\n        </ListItem>\n        <ListItem onClick={() => signOut(auth)} button key={'Log Out'}>\n          <div className='list-item'>\n            <PowerSettingsNewIcon className='icon' />\n            <p>Log Out</p>\n          </div>\n        </ListItem>\n      </List>\n      <Divider />\n    </Box>\n  );\n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={openDrafts}\n        onClose={() => setOpenDrafts(false)}\n        TransitionComponent={Transition}\n        className=\"profile-dialog\"\n      >\n        <center className='profile-nav-heading'>\n\n          <div className=\"profile-nav\">\n            <div className=\"profile-nav-left\">\n              <img\n                className=\"app_header_image\"\n                src=\"LensCleanse.png\"\n                alt=\"Lens Cleanse\"\n                width='80'\n                height='auto'\n              />\n              <h1 className=\"app_header_h1\">My Drafts</h1>\n            </div>\n\n            <IconButton\n                className=\"x-button\"\n                color=\"inherit\"\n                onClick={closeDrafts}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n            </IconButton>\n          </div>\n\n        </center>\n\n        <Drafts user={user} username={username}></Drafts>\n      </Dialog>\n\n      <Dialog\n        fullScreen\n        open={openCaptured}\n        onClose={handleOpenCaptured}\n        TransitionComponent={Transition}\n        className=\"profile-dialog\"\n      >\n        <center className='profile-nav-heading'>\n\n          <div className=\"profile-nav\">\n            <div className=\"profile-nav-left\">\n              <img\n                className=\"app_header_image\"\n                src=\"LensCleanse.png\"\n                alt=\"Lens Cleanse\"\n                width='80'\n                height='auto'\n              />\n              <h1 className=\"app_header_h1\">My Captured Photos</h1>\n            </div>\n\n            <IconButton\n                className=\"x-button\"\n                color=\"inherit\"\n                onClick={closeCaptured}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n            </IconButton>\n          </div>\n\n        </center>\n\n        <Captured profileusername={username} profileuser={user} ></Captured>\n      </Dialog>\n\n      <Dialog \n      open={open} \n      onClose={closeUpload}\n      fullWidth={true}\n      maxWidth={'md'}>\n\n      <DialogTitle> <h1 className=\"app_header_h1\">Lens Cleanse Image Upload </h1> </DialogTitle>\n      <DialogContent>{user?.displayName ? (\n        <ImageUpload username={user.displayName} />\n        ) : (\n        <h3 className=\"upload-login-message\">Login to upload an image...</h3>\n        )}</DialogContent>\n      </Dialog>\n\n      <React.Fragment className='togglebutton' key={'right'}>\n        <Button onClick={toggleDrawer('right', true)}><Avatar className=\"post_avatar\" alt={username} src={\"/static/images/avatar/1.jpg\"} /></Button>\n        <Drawer\n          anchor={'right'}\n          open={state['right']}\n          onClose={toggleDrawer('right', false)}\n        >\n          {list('right')}\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n\n\nexport default AppDrawer\n\n","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Drafts.js",["181","182","183","184"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport { onSnapshot, orderBy, query, Timestamp, where } from 'firebase/firestore';\nimport { storage, collectDrafts } from './firebase';\n\nimport DraftPhoto from './DraftPhoto';\n\nfunction Drafts({ user, username }) {\n  const [drafts, setDrafts] = useState([]);\n\n  useEffect(() => {\n    onSnapshot(query(collectDrafts, where('username', \"==\", username)), (snapshot) => {\n      // when posts changes this code runs\n      console.log(\"Snapshot\", snapshot.docs)\n      setDrafts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        draft: doc.data()\n      })));\n\n    })\n  }, []);\n\n  return (\n    <div>\n        <Grid className=\"profile-posts-container\" container spacing={0.5}>\n          {\n            drafts.map(({ id, draft }) => (\n              <Grid className=\"profile-posts\" >\n                <DraftPhoto\n                  className=\"profile-post\"\n                  key={id}\n                  postId={id}\n                  user={user}\n                  username={draft.username}\n                  caption={draft.caption}\n                  imageUrl={draft.imageUrl}\n                  iso={draft.ISO}\n                  cameraType={draft.cameraType}\n                  fStop={draft.fStop}\n                  shutterSpeed={draft.shutterSpeed}\n                  focalLength={draft.focalLength}\n                  lensType={draft.lensType}\n                  lighting={draft.lighting}\n                  location={draft.location}\n                  other={draft.other}\n                />\n              </Grid>\n            ))\n          }\n        </Grid>\n    </div>\n  )\n}\n\n\n\nexport default Drafts\n","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/DraftPhoto.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"import React, { useState, useEffect } from 'react';\n\nimport { Dialog, DialogContent, Button, Input } from '@material-ui/core';\nimport TextField from '@mui/material/TextField';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport ImageUpload from './ImageUpload';\n\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { collection, onSnapshot, doc, addDoc, Timestamp, serverTimestamp, FieldValue, orderBy, query, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { collectPosts, auth, collectDrafts, db } from './firebase'\nimport './Photo.css'\nimport './DraftPhoto.css'\n\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport CameraIcon from '@mui/icons-material/Camera';\nimport CameraOutlinedIcon from '@mui/icons-material/CameraOutlined';\nimport AddCommentIcon from '@mui/icons-material/AddComment';\n\n\n  const ExpandMore = styled((props) => {\n    const { expand, ...other } = props;\n    return <IconButton {...other} />;\n  })(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  }));\n\nfunction DraftPhoto({ postId, username, user, caption, imageUrl, iso, cameraType, fStop, shutterSpeed, other,\n                    focalLength,lensType, lighting, location}) {\n\n    const [expanded, setExpanded] = useState(false); \n    const [openEdit, setOpenEdit] = useState(false);\n    const [openDelete, setOpenDelete] = useState(false);\n\n    const [updateCaption, setUpdateCaption] = useState(caption);\n    const [updateCameraType, setUpdateCameraType] = useState(cameraType);\n    const [updateISO, setUpdateISO] = useState(iso);\n    const [updateLensType, setUpdateLensType] = useState(lensType);\n    const [updateFStop, setUpdateFStop] = useState(fStop);\n    const [updateShutterSpeed, setUpdateShutterSpeed] = useState(shutterSpeed);\n    const [updateLighting, setUpdateLighting] = useState(lighting);\n    const [updateLocation, setUpdateLocation] = useState(location);\n    const [updateFocalLength, setUpdateFocalLength] = useState(focalLength);\n    const [updateOther, setUpdateOther] = useState(other);\n\n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n\n    const handleOpenEdit = () => {\n      setOpenEdit(!openEdit);\n    };\n\n    const handleOpenDelete = () => {\n      setOpenDelete(!openDelete);\n    };\n\n    const updateDraft = (event) => {\n      event.preventDefault();\n      const current_post = doc(collectDrafts, postId);\n      updateDoc(current_post, {\n        caption: updateCaption,\n        cameraType: updateCameraType,\n        ISO: updateISO,\n        lensType: updateLensType,\n        fStop: updateFStop,\n        shutterSpeed: updateShutterSpeed,\n        lighting: updateLighting,\n        location: updateLocation,\n        focalLength: updateFocalLength,\n        other: updateOther\n      });\n      setOpenEdit(false);\n    }\n\n    const deleteDraft = () => {\n      const current_post = doc(collectDrafts, postId)\n      deleteDoc(doc(db, 'drafts', postId))\n    }\n\n    const uploadDraft = () => {\n      if (!imageUrl || !updateCaption) {\n        alert('PLEASE MAKE SURE YOU ENTERED BOTH IMAGE AND CAPTION')\n        return;\n      }\n      let time = serverTimestamp(FieldValue)\n      addDoc(collectPosts, {\n        timestamp: time,\n        caption: updateCaption,\n        imageUrl: imageUrl,\n        username: username,\n        captures: [],\n        ISO: updateISO,\n        cameraType: updateCameraType,\n        lensType: updateLensType,\n        fStop: updateFStop,\n        shutterSpeed: updateShutterSpeed,\n        lighting: updateLighting,\n        location: updateLocation,\n        focalLength: updateFocalLength,\n        other: updateOther,\n        numComments: 0\n\n      });\n      const current_post = doc(collectDrafts, postId)\n      deleteDoc(doc(db, 'drafts', postId))\n    }\n\n    const descriptionElementRef = React.useRef(null);\n\n    return (\n        <div className=\"wrapper\">\n            <Dialog \n            open={openEdit} \n            onClose={handleOpenEdit}\n            fullWidth={true}\n            maxWidth={'md'}>\n\n            <DialogTitle> <h1 className=\"app_header_h1\">Lens Cleanse Draft Edit </h1> </DialogTitle>\n            <DialogContent>\n\n            \n              <div className=\"uploadFile\">\n                <TextField id=\"standard-basic\" className=\"draft_caption\" label=\"Enter a caption\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateCaption(event.target.value)} value={updateCaption} />\n                <TextField className=\"draft_photoInfo\" label=\"Enter Camera Type\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateCameraType(event.target.value)} value={updateCameraType} />\n                <TextField className=\"draft_photoInfo\" label=\"Enter ISO\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateISO(event.target.value)} value={updateISO} />\n                <TextField className=\"draft_photoInfo\" label=\"Enter Lens\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateLensType(event.target.value)} value={updateLensType} />\n                <TextField className=\"draft_photoInfo\" label=\"Enter fStop\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateFStop(event.target.value)} value={updateFStop} />\n                <TextField className=\"draft_photoInfo\" label=\"Enter Shutter Speed\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateShutterSpeed(event.target.value)} value={updateShutterSpeed} />\n                <TextField className=\"draft_photoInfo\" label=\"Enter Lighting Details\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateLighting(event.target.value)} value={updateLighting} />\n                <TextField className=\"draft_photoInfo\" label=\"Enter Location\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateLocation(event.target.value)} value={updateLocation} />\n                <TextField className=\"draft_photoInfo\" label=\"Enter Focal Length\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateFocalLength(event.target.value)} value={updateFocalLength} />\n                <TextField className=\"draft_photoInfo_other\" label=\"Enter Other Info\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateOther(event.target.value)} value={updateOther} />\n              </div>\n            \n            <div className=\"draft-delete-button\">\n              <button className=\"bottom-buttons\" variant=\"contained\" color=\"primary\" onClick={updateDraft}>\n                Update\n              </button>\n              <button className=\"bottom-buttons\" variant=\"contained\" color=\"primary\" onClick={uploadDraft}>\n                Upload\n              </button>\n            </div>\n\n            </DialogContent>\n            </Dialog>\n\n            <Dialog \n            open={openDelete} \n            onClose={handleOpenDelete}\n            fullWidth={true}\n            maxWidth={'md'}>\n\n            <DialogTitle> <h1 className=\"app_header_h1\">Lens Cleanse Delete Draft </h1> </DialogTitle>\n            <DialogContent>\n\n            <div className=\"uploadFileComponents\">\n            <h4> Are you sure you want to delete this draft? </h4>\n\n            <div className='draft_delete_buttons'>\n                <button className=\"bottom-buttons\" onClick={deleteDraft}> YES </button>\n                <button className=\"bottom-buttons\" onClick={handleOpenDelete}> CANCEL </button>\n            </div>\n            </div>\n\n            </DialogContent>\n            </Dialog>\n\n\n            <Card sx={{ maxWidth: 400 }}>\n                <CardMedia\n                    component=\"img\"\n                    height=\"220\"\n                    image={imageUrl}\n                    alt=\"Paella dish\"\n                />\n                <CardActions className=\"buttons\" disableSpacing>\n                  <div>\n                    <Button disabled={!user} onClick={handleOpenEdit} aria-label=\"share\">\n                        Edit\n                    </Button>\n\n                    <Button disabled={!user} onClick={handleOpenDelete} aria-label=\"share\">\n                        Delete\n                    </Button>\n\n                  </div>\n                    <ExpandMore\n                        expand={expanded}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                        >\n                        <ExpandMoreIcon />\n                    </ExpandMore>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                    <Typography paragraph>Details:</Typography>\n                    <Typography paragraph>\n                            <p className='info1'> <strong>Camera: </strong> {cameraType} </p>\n                            <p className='info2'> <strong> Lens Type: </strong>  {lensType} </p>\n                            <p className='info3'> <strong> ISO: </strong>  {iso} </p>\n                            <p className='info4'> <strong> f-Stop: </strong>  {fStop} </p>\n                            <p className='info5'> <strong> Shutter Speed: </strong>  {shutterSpeed} s </p>\n                            <p className='info6'> <strong> Focal Length: </strong>  {focalLength} mm</p>\n                            <p className='info7'> <strong> Lighting: </strong>  {lighting} </p>\n                            <p className='info8'> <strong> Location: </strong>  {location} </p>\n                            <p className='info9'> <strong> Other Info: </strong>  {other} </p>\n                    </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n\n        </div>\n    )\n}\n\nexport default DraftPhoto","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Captured.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { onSnapshot, orderBy, query, Timestamp, where } from 'firebase/firestore';\nimport { collectPosts, auth } from './firebase'\n\nimport './Newprofile.css'\n\nimport CapturedPhoto from './CapturedPhoto';\n\nconst splitTime = (date) => {\n  if(!date) { return [] }\n  date = date.toDate()\n  const date_elements = [date.getDay(), date.getDate(), date.getMonth(), date.getFullYear(), date.getHours(), date.getMinutes()]\n  return date_elements\n}\n\nconst containsCapture = (capList, capName) => {\n    for(let i = 0; i < capList.length; i++) {\n        if(capList[i] == capName) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction Captured({ profileusername, profileuser }) {\n  const [username, setUsername] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n\n\n  useEffect(() => {\n    onSnapshot(collectPosts, (snapshot) => {\n      // when posts changes this code runs\n      console.log(\"Snapshot\", snapshot.docs)\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n\n    })\n  }, []);\n\n\n  //! Replace p tags with information from Firebase\n  return (\n    <div>\n\n      <div className=\"profile-wrapper\">\n        <Grid className=\"profile-posts-container\"> {/* container spacing={0.5} */}\n          {\n            posts.map(({ id, post }) => (\n              <Grid className=\"profile-posts\" >\n                <CapturedPhoto\n                  className=\"profile-post\"\n                  key={id}\n                  postId={id}\n                  user={profileuser}\n                  username={post.username}\n                  caption={post.caption}\n                  imageUrl={post.imageUrl}\n                  iso={post.ISO}\n                  cameraType={post.cameraType}\n                  fStop={post.fStop}\n                  shutterSpeed={post.shutterSpeed}\n                  captures={post.captures}\n                  focalLength={post.focalLength}\n                  lensType={post.lensType}\n                  lighting={post.lighting}\n                  location={post.location}\n                  other={post.other}\n                  numComments={post.numComments}\n                  timePosted={splitTime(post.timestamp)}\n                />\n              </Grid>\n            ))\n          }\n        </Grid>\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default Captured","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/CapturedPhoto.js",["221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249"],"import React, { useState, useEffect } from 'react';\n\nimport { Dialog, DialogContent, Button, Input } from '@material-ui/core';\nimport TextField from '@mui/material/TextField';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { collection, onSnapshot, doc, addDoc, Timestamp, serverTimestamp, FieldValue, orderBy, query, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { collectPosts, auth } from './firebase'\nimport './Photo.css'\n\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport CameraIcon from '@mui/icons-material/Camera';\nimport CameraOutlinedIcon from '@mui/icons-material/CameraOutlined';\nimport AddCommentIcon from '@mui/icons-material/AddComment';\n\n\n  const ExpandMore = styled((props) => {\n    const { expand, ...other } = props;\n    return <IconButton {...other} />;\n  })(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  }));\n\n  const parseDay = (day) => {\n    if(day == 0) {\n      return \"Mon\"\n    }\n    else if(day == 1) {\n      return \"Tue\"\n    }\n    else if(day == 2) {\n      return \"Wed\"\n    }\n    else if(day == 3) {\n      return \"Thu\"\n    }\n    else if(day == 4) {\n      return \"Fri\"\n    }\n    else if(day == 5) {\n      return \"Sat\"\n    }\n    else if(day == 6) {\n      return \"Sun\"\n    }\n    else {\n      return \"\"\n    }\n  }\n\n  const parseMonth = (month) => {\n    if(month == 0) {\n      return \"January\"\n    }\n    else if(month == 1) {\n      return \"Febuary\"\n    }\n    else if(month == 2) {\n      return \"March\"\n    }\n    else if(month == 3) {\n      return \"April\"\n    }\n    else if(month == 4) {\n      return \"May\"\n    }\n    else if(month == 5) {\n      return \"June\"\n    }\n    else if(month == 6) {\n      return \"July\"\n    }\n    else if(month == 7) {\n        return \"August\"\n    }\n    else if(month == 8) {\n        return \"September\"\n    }\n    else if(month == 9) {\n        return \"October\"\n    }\n    else if(month == 10) {\n        return \"November\"\n    }\n    else if(month == 11) {\n        return \"December\"\n    }\n    else {\n      return \"\"\n    }\n  }\n\n  const parseTime = (timeArray) => {\n    if(!timeArray) {return \"No Time Stamp on Post\"}\n\n    const post_day = timeArray[0]\n    const post_date = timeArray[1]\n    const post_month = timeArray[2]\n    const post_year = timeArray[3]\n    const post_hour = timeArray[4]\n    const post_minute = timeArray[5]\n\n    let result = parseDay(post_day) + \", \";\n    result += parseMonth(post_month)\n    result += \" \"\n    result += post_date\n    result += \", \"\n    result += post_year\n    result += \" at \"\n    result += post_hour\n    result += \":\"\n    if (post_minute < 10) {\n      result += \"0\"\n    }\n    result += post_minute\n    return result\n}\n\nconst removeElement= (capList, item) => {\n  const array = capList\n  const index = array.indexOf(item);\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n  return array\n}\n\nfunction CapturedPhoto({ postId, username, user, caption, imageUrl, iso, cameraType, fStop, shutterSpeed, other,\n    captures, focalLength,lensType, lighting, location, numComments, timePosted}) {\n\n    const [expanded, setExpanded] = useState(false); \n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    const [openComment, setOpenComment] = useState(false);\n    const [openViewComments, setOpenViewComments] = useState(false);\n    const [openCommentPosted, setOpenCommentPosted] = useState(false);\n\n    const [usersCaptured, setUsersCaptured] = useState([]);\n    const [isClicked, setisClicked] = useState(false);\n    const [capturesList, setCapturesList] = useState([]);\n\n    const handleCloseCommentPosted = () => {\n        setOpenCommentPosted(!openCommentPosted)\n    }\n\n    const addList = (l, i) => {\n      let res = l;\n      res.push(i);\n      return res;\n    }\n\n    useEffect(() => {\n      let unsubscribe;\n      if (postId) {\n        unsubscribe = onSnapshot(collection(doc(collectPosts, postId), 'captures'), (snapshot) => {\n          setCapturesList(snapshot.docs.map((doc) => ({\n            id: doc.id,\n            name: doc.data()\n          })));\n        });\n        capturesList.map(({ id, name }) => (\n          setUsersCaptured(addList(usersCaptured, name.username))\n        ))\n      }\n      return () => {\n        unsubscribe();\n      };\n    }, [postId, captures])\n\n    const handleClickOpen = () => {\n      setOpenComment(true);\n    };\n  \n    const handleClose = () => {\n      setOpenComment(false);\n    };\n\n    const handleViewComments = () => {\n        setOpenViewComments(!openViewComments);\n    }\n\n    useEffect(() => {\n        let unsubscribe;\n        if (postId) {\n          unsubscribe = onSnapshot(query(collection(doc(collectPosts, postId), 'comments'), orderBy('timestamp', 'desc')), (snapshot) => {\n            setComments(snapshot.docs.map((doc) => doc.data()));\n          });\n        }\n        return () => {\n          unsubscribe();\n        };\n      }, [postId])\n\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    const postComment = (event) => {\n        event.preventDefault();\n        addDoc(collection(doc(collectPosts, postId), 'comments'), {\n          text: comment,\n          username: user.displayName,\n          timestamp: serverTimestamp(FieldValue)\n        });\n        const current_post = doc(collectPosts, postId);\n        updateDoc(current_post, {\n          numComments: numComments+1\n        });\n        setComment('');\n        handleClose();\n        handleCloseCommentPosted();\n\n      }\n\n      const addCapture = (event) => {\n        event.preventDefault();\n        const current_post = doc(collectPosts, postId)\n        updateDoc(current_post, {\n          captures: captures+1\n        });\n        addDoc(collection(doc(collectPosts, postId), 'captures'), {\n          username: user.displayName\n        });\n        setisClicked(true);\n      }\n\n      const deleteCaptureDoc = (target, docid) => {\n        if(target == user.displayName) {\n          deleteDoc(doc(collection(doc(collectPosts, postId), 'captures'), docid))\n        }\n      }\n\n      const removeCapture = (event) => {\n        event.preventDefault();\n        const current_post = doc(collectPosts, postId)\n        updateDoc(current_post, {\n          captures: captures-1\n        });\n\n        capturesList.map(({ id, name }) => (\n          deleteCaptureDoc(name.username, id)\n         ))\n         setisClicked(false);\n      }\n\n    const descriptionElementRef = React.useRef(null);\n    useEffect(() => {\n      if (openViewComments) {\n        const { current: descriptionElement } = descriptionElementRef;\n        if (descriptionElement !== null) {\n          descriptionElement.focus();\n        }\n      }\n    }, [openViewComments]);\n\n    return (\n        <div className=\"wrapper\">\n\n            <Dialog\n                open={openCommentPosted}\n                onClose={handleCloseCommentPosted}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                {\"Congrats!\"}\n                </DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Your comment has been successfully uploaded under {username}'s \"{caption}\" post.\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseCommentPosted}>OK</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                sx={{ width: 400 }}\n                open={openViewComments}\n                onClose={handleViewComments}\n                scroll={'body'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Comments on {username}'s \"{caption}\" post</DialogTitle>\n                <DialogContentText\n                    id=\"scroll-dialog-description\"\n                    ref={descriptionElementRef}\n                    tabIndex={-1}\n                >\n                    <div className='post_comments'>\n                        {comments.map((comment) => (\n                        <h4 className='a_comment'> <strong>{comment.username}</strong> {comment.text} </h4>\n                        ))}\n                    </div>\n                </DialogContentText>\n                <DialogActions>\n                <Button onClick={handleViewComments}>Close</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog className=\"photo-comment-dialog\" open={openComment} onClose={handleClose}>\n                <DialogTitle>Add a Comment on {username}'s \"{caption}\" post! </DialogTitle>\n                <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Comment\"\n                    type=\"email\"\n                    fullWidth\n                    variant=\"standard\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                />\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button disabled={!comment || !user} onClick={postComment}>Comment</Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <Card sx={{ maxWidth: 400 }}>\n                <CardHeader\n                    title={username}\n                    subheader={parseTime(timePosted)}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"220\"\n                    image={imageUrl}\n                    alt=\"Paella dish\"\n                />\n                <CardContent>\n                     <Typography variant=\"body2\" color=\"text\">\n                        <p>{caption}</p>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        <p>{captures} captures</p>\n                        <a onClick={handleViewComments}>View all {numComments} comments</a>\n                    </Typography>\n                </CardContent>\n                <CardActions className=\"buttons\" disableSpacing>\n                  <div>\n                    {\n                    user && isClicked\n                      ?\n                      <IconButton className=\"likeandcomment\" onClick={removeCapture} disabled={user == null}><CameraOutlinedIcon /></IconButton>\n                      :\n                      <IconButton className=\"likeandcomment\" onClick={addCapture} disabled={user == null}><CameraIcon /></IconButton>\n                    }\n                    <IconButton disabled={!user} onClick={handleClickOpen} aria-label=\"share\">\n                        <AddCommentIcon />\n                    </IconButton>\n\n                  </div>\n                    <ExpandMore\n                        expand={expanded}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                        >\n                        <ExpandMoreIcon />\n                    </ExpandMore>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                    <Typography paragraph>Details:</Typography>\n                    <Typography paragraph>\n                            <p className='info1'> <strong>Camera: </strong> {cameraType} </p>\n                            <p className='info2'> <strong> Lens Type: </strong>  {lensType} </p>\n                            <p className='info3'> <strong> ISO: </strong>  {iso} </p>\n                            <p className='info4'> <strong> f-Stop: </strong>  {fStop} </p>\n                            <p className='info5'> <strong> Shutter Speed: </strong>  {shutterSpeed} s </p>\n                            <p className='info6'> <strong> Focal Length: </strong>  {focalLength} mm</p>\n                            <p className='info7'> <strong> Lighting: </strong>  {lighting} </p>\n                            <p className='info8'> <strong> Location: </strong>  {location} </p>\n                            <p className='info9'> <strong> Other Info: </strong>  {other} </p>\n                    </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n\n        </div>\n    )\n}\n\nexport default CapturedPhoto",{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":21,"column":20,"nodeType":"256","messageId":"257","endLine":21,"endColumn":31},{"ruleId":"254","severity":1,"message":"258","line":116,"column":7,"nodeType":"256","messageId":"257","endLine":116,"endColumn":16},{"ruleId":"254","severity":1,"message":"259","line":6,"column":28,"nodeType":"256","messageId":"257","endLine":6,"endColumn":42},{"ruleId":"254","severity":1,"message":"260","line":6,"column":52,"nodeType":"256","messageId":"257","endLine":6,"endColumn":62},{"ruleId":"254","severity":1,"message":"261","line":6,"column":64,"nodeType":"256","messageId":"257","endLine":6,"endColumn":69},{"ruleId":"254","severity":1,"message":"262","line":6,"column":71,"nodeType":"256","messageId":"257","endLine":6,"endColumn":81},{"ruleId":"254","severity":1,"message":"263","line":35,"column":9,"nodeType":"256","messageId":"257","endLine":35,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":19,"column":22,"nodeType":"256","messageId":"257","endLine":19,"endColumn":33},{"ruleId":"254","severity":1,"message":"264","line":20,"column":22,"nodeType":"256","messageId":"257","endLine":20,"endColumn":33},{"ruleId":"254","severity":1,"message":"265","line":21,"column":19,"nodeType":"256","messageId":"257","endLine":21,"endColumn":27},{"ruleId":"254","severity":1,"message":"266","line":64,"column":11,"nodeType":"256","messageId":"257","endLine":64,"endColumn":17},{"ruleId":"254","severity":1,"message":"267","line":2,"column":77,"nodeType":"256","messageId":"257","endLine":2,"endColumn":103},{"ruleId":"254","severity":1,"message":"268","line":6,"column":10,"nodeType":"256","messageId":"257","endLine":6,"endColumn":16},{"ruleId":"254","severity":1,"message":"269","line":6,"column":18,"nodeType":"256","messageId":"257","endLine":6,"endColumn":23},{"ruleId":"254","severity":1,"message":"255","line":13,"column":20,"nodeType":"256","messageId":"257","endLine":13,"endColumn":31},{"ruleId":"270","severity":1,"message":"271","line":120,"column":5,"nodeType":"272","messageId":"273","endLine":120,"endColumn":12},{"ruleId":"254","severity":1,"message":"274","line":3,"column":10,"nodeType":"256","messageId":"257","endLine":3,"endColumn":28},{"ruleId":"254","severity":1,"message":"275","line":3,"column":30,"nodeType":"256","messageId":"257","endLine":3,"endColumn":43},{"ruleId":"254","severity":1,"message":"276","line":4,"column":22,"nodeType":"256","messageId":"257","endLine":4,"endColumn":29},{"ruleId":"254","severity":1,"message":"277","line":4,"column":38,"nodeType":"256","messageId":"257","endLine":4,"endColumn":47},{"ruleId":"254","severity":1,"message":"278","line":5,"column":24,"nodeType":"256","messageId":"257","endLine":5,"endColumn":28},{"ruleId":"254","severity":1,"message":"279","line":17,"column":10,"nodeType":"256","messageId":"257","endLine":17,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":17,"column":20,"nodeType":"256","messageId":"257","endLine":17,"endColumn":31},{"ruleId":"254","severity":1,"message":"280","line":18,"column":10,"nodeType":"256","messageId":"257","endLine":18,"endColumn":19},{"ruleId":"254","severity":1,"message":"281","line":18,"column":21,"nodeType":"256","messageId":"257","endLine":18,"endColumn":33},{"ruleId":"254","severity":1,"message":"282","line":19,"column":10,"nodeType":"256","messageId":"257","endLine":19,"endColumn":14},{"ruleId":"254","severity":1,"message":"283","line":19,"column":16,"nodeType":"256","messageId":"257","endLine":19,"endColumn":23},{"ruleId":"284","severity":1,"message":"285","line":33,"column":6,"nodeType":"286","endLine":33,"endColumn":8,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":37,"column":25,"nodeType":"290","messageId":"273","endLine":37,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":48,"column":10,"nodeType":"290","messageId":"273","endLine":48,"endColumn":12},{"ruleId":"288","severity":1,"message":"289","line":51,"column":15,"nodeType":"290","messageId":"273","endLine":51,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":54,"column":15,"nodeType":"290","messageId":"273","endLine":54,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":57,"column":15,"nodeType":"290","messageId":"273","endLine":57,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":60,"column":15,"nodeType":"290","messageId":"273","endLine":60,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":63,"column":15,"nodeType":"290","messageId":"273","endLine":63,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":66,"column":15,"nodeType":"290","messageId":"273","endLine":66,"endColumn":17},{"ruleId":"254","severity":1,"message":"291","line":80,"column":11,"nodeType":"256","messageId":"257","endLine":80,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":90,"column":25,"nodeType":"290","messageId":"273","endLine":90,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":100,"column":40,"nodeType":"290","messageId":"273","endLine":100,"endColumn":42},{"ruleId":"288","severity":1,"message":"289","line":110,"column":42,"nodeType":"290","messageId":"273","endLine":110,"endColumn":44},{"ruleId":"288","severity":1,"message":"289","line":120,"column":42,"nodeType":"290","messageId":"273","endLine":120,"endColumn":44},{"ruleId":"254","severity":1,"message":"292","line":147,"column":7,"nodeType":"256","messageId":"257","endLine":147,"endColumn":20},{"ruleId":"254","severity":1,"message":"293","line":191,"column":10,"nodeType":"256","messageId":"257","endLine":191,"endColumn":19},{"ruleId":"284","severity":1,"message":"294","line":237,"column":6,"nodeType":"286","endLine":237,"endColumn":24,"suggestions":"295"},{"ruleId":"254","severity":1,"message":"296","line":239,"column":9,"nodeType":"256","messageId":"257","endLine":239,"endColumn":22},{"ruleId":"254","severity":1,"message":"297","line":256,"column":9,"nodeType":"256","messageId":"257","endLine":256,"endColumn":23},{"ruleId":"288","severity":1,"message":"289","line":258,"column":27,"nodeType":"290","messageId":"273","endLine":258,"endColumn":29},{"ruleId":"254","severity":1,"message":"298","line":267,"column":9,"nodeType":"256","messageId":"257","endLine":267,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":307,"column":15,"nodeType":"290","messageId":"273","endLine":307,"endColumn":17},{"ruleId":"254","severity":1,"message":"299","line":328,"column":9,"nodeType":"256","messageId":"257","endLine":328,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":330,"column":27,"nodeType":"290","messageId":"273","endLine":330,"endColumn":29},{"ruleId":"288","severity":1,"message":"300","line":348,"column":30,"nodeType":"290","messageId":"273","endLine":348,"endColumn":32},{"ruleId":"284","severity":1,"message":"301","line":354,"column":6,"nodeType":"286","endLine":354,"endColumn":8,"suggestions":"302"},{"ruleId":"303","severity":1,"message":"304","line":648,"column":11,"nodeType":"305","endLine":648,"endColumn":63},{"ruleId":"303","severity":1,"message":"304","line":91,"column":7,"nodeType":"305","endLine":91,"endColumn":48},{"ruleId":"254","severity":1,"message":"269","line":3,"column":41,"nodeType":"256","messageId":"257","endLine":3,"endColumn":46},{"ruleId":"254","severity":1,"message":"274","line":9,"column":10,"nodeType":"256","messageId":"257","endLine":9,"endColumn":28},{"ruleId":"254","severity":1,"message":"275","line":9,"column":30,"nodeType":"256","messageId":"257","endLine":9,"endColumn":43},{"ruleId":"254","severity":1,"message":"277","line":10,"column":47,"nodeType":"256","messageId":"257","endLine":10,"endColumn":56},{"ruleId":"254","severity":1,"message":"278","line":11,"column":24,"nodeType":"256","messageId":"257","endLine":11,"endColumn":28},{"ruleId":"254","severity":1,"message":"306","line":24,"column":8,"nodeType":"256","messageId":"257","endLine":24,"endColumn":20},{"ruleId":"288","severity":1,"message":"289","line":42,"column":12,"nodeType":"290","messageId":"273","endLine":42,"endColumn":14},{"ruleId":"288","severity":1,"message":"289","line":45,"column":17,"nodeType":"290","messageId":"273","endLine":45,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":48,"column":17,"nodeType":"290","messageId":"273","endLine":48,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":51,"column":17,"nodeType":"290","messageId":"273","endLine":51,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":54,"column":17,"nodeType":"290","messageId":"273","endLine":54,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":57,"column":17,"nodeType":"290","messageId":"273","endLine":57,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":60,"column":17,"nodeType":"290","messageId":"273","endLine":60,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":69,"column":14,"nodeType":"290","messageId":"273","endLine":69,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":72,"column":19,"nodeType":"290","messageId":"273","endLine":72,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":75,"column":19,"nodeType":"290","messageId":"273","endLine":75,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":78,"column":19,"nodeType":"290","messageId":"273","endLine":78,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":81,"column":19,"nodeType":"290","messageId":"273","endLine":81,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":84,"column":19,"nodeType":"290","messageId":"273","endLine":84,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":87,"column":19,"nodeType":"290","messageId":"273","endLine":87,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":90,"column":19,"nodeType":"290","messageId":"273","endLine":90,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":93,"column":19,"nodeType":"290","messageId":"273","endLine":93,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":96,"column":19,"nodeType":"290","messageId":"273","endLine":96,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":99,"column":19,"nodeType":"290","messageId":"273","endLine":99,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":102,"column":19,"nodeType":"290","messageId":"273","endLine":102,"endColumn":21},{"ruleId":"254","severity":1,"message":"293","line":156,"column":12,"nodeType":"256","messageId":"257","endLine":156,"endColumn":21},{"ruleId":"254","severity":1,"message":"296","line":218,"column":11,"nodeType":"256","messageId":"257","endLine":218,"endColumn":24},{"ruleId":"288","severity":1,"message":"289","line":222,"column":31,"nodeType":"290","messageId":"273","endLine":222,"endColumn":33},{"ruleId":"284","severity":1,"message":"294","line":236,"column":6,"nodeType":"286","endLine":236,"endColumn":14,"suggestions":"307"},{"ruleId":"288","severity":1,"message":"289","line":271,"column":19,"nodeType":"290","messageId":"273","endLine":271,"endColumn":21},{"ruleId":"303","severity":1,"message":"304","line":385,"column":25,"nodeType":"305","endLine":385,"endColumn":57},{"ruleId":"254","severity":1,"message":"308","line":13,"column":8,"nodeType":"256","messageId":"257","endLine":13,"endColumn":21},{"ruleId":"254","severity":1,"message":"309","line":15,"column":8,"nodeType":"256","messageId":"257","endLine":15,"endColumn":25},{"ruleId":"254","severity":1,"message":"310","line":29,"column":8,"nodeType":"256","messageId":"257","endLine":29,"endColumn":22},{"ruleId":"254","severity":1,"message":"311","line":33,"column":8,"nodeType":"256","messageId":"257","endLine":33,"endColumn":18},{"ruleId":"254","severity":1,"message":"312","line":76,"column":9,"nodeType":"256","messageId":"257","endLine":76,"endColumn":20},{"ruleId":"254","severity":1,"message":"313","line":84,"column":9,"nodeType":"256","messageId":"257","endLine":84,"endColumn":21},{"ruleId":"254","severity":1,"message":"276","line":3,"column":22,"nodeType":"256","messageId":"257","endLine":3,"endColumn":29},{"ruleId":"254","severity":1,"message":"277","line":3,"column":38,"nodeType":"256","messageId":"257","endLine":3,"endColumn":47},{"ruleId":"254","severity":1,"message":"314","line":4,"column":10,"nodeType":"256","messageId":"257","endLine":4,"endColumn":17},{"ruleId":"284","severity":1,"message":"315","line":21,"column":6,"nodeType":"286","endLine":21,"endColumn":8,"suggestions":"316"},{"ruleId":"254","severity":1,"message":"317","line":1,"column":27,"nodeType":"256","messageId":"257","endLine":1,"endColumn":36},{"ruleId":"254","severity":1,"message":"269","line":3,"column":41,"nodeType":"256","messageId":"257","endLine":3,"endColumn":46},{"ruleId":"254","severity":1,"message":"308","line":5,"column":8,"nodeType":"256","messageId":"257","endLine":5,"endColumn":21},{"ruleId":"254","severity":1,"message":"309","line":6,"column":8,"nodeType":"256","messageId":"257","endLine":6,"endColumn":25},{"ruleId":"254","severity":1,"message":"318","line":9,"column":8,"nodeType":"256","messageId":"257","endLine":9,"endColumn":19},{"ruleId":"254","severity":1,"message":"274","line":11,"column":10,"nodeType":"256","messageId":"257","endLine":11,"endColumn":28},{"ruleId":"254","severity":1,"message":"275","line":11,"column":30,"nodeType":"256","messageId":"257","endLine":11,"endColumn":43},{"ruleId":"254","severity":1,"message":"319","line":12,"column":10,"nodeType":"256","messageId":"257","endLine":12,"endColumn":20},{"ruleId":"254","severity":1,"message":"320","line":12,"column":22,"nodeType":"256","messageId":"257","endLine":12,"endColumn":32},{"ruleId":"254","severity":1,"message":"277","line":12,"column":47,"nodeType":"256","messageId":"257","endLine":12,"endColumn":56},{"ruleId":"254","severity":1,"message":"276","line":12,"column":87,"nodeType":"256","messageId":"257","endLine":12,"endColumn":94},{"ruleId":"254","severity":1,"message":"321","line":12,"column":96,"nodeType":"256","messageId":"257","endLine":12,"endColumn":101},{"ruleId":"254","severity":1,"message":"278","line":13,"column":24,"nodeType":"256","messageId":"257","endLine":13,"endColumn":28},{"ruleId":"254","severity":1,"message":"322","line":19,"column":8,"nodeType":"256","messageId":"257","endLine":19,"endColumn":18},{"ruleId":"254","severity":1,"message":"306","line":27,"column":8,"nodeType":"256","messageId":"257","endLine":27,"endColumn":20},{"ruleId":"254","severity":1,"message":"323","line":28,"column":8,"nodeType":"256","messageId":"257","endLine":28,"endColumn":18},{"ruleId":"254","severity":1,"message":"324","line":29,"column":8,"nodeType":"256","messageId":"257","endLine":29,"endColumn":26},{"ruleId":"254","severity":1,"message":"325","line":30,"column":8,"nodeType":"256","messageId":"257","endLine":30,"endColumn":22},{"ruleId":"254","severity":1,"message":"326","line":93,"column":13,"nodeType":"256","messageId":"257","endLine":93,"endColumn":25},{"ruleId":"254","severity":1,"message":"326","line":121,"column":13,"nodeType":"256","messageId":"257","endLine":121,"endColumn":25},{"ruleId":"254","severity":1,"message":"327","line":125,"column":11,"nodeType":"256","messageId":"257","endLine":125,"endColumn":32},{"ruleId":"254","severity":1,"message":"274","line":3,"column":10,"nodeType":"256","messageId":"257","endLine":3,"endColumn":28},{"ruleId":"254","severity":1,"message":"275","line":3,"column":30,"nodeType":"256","messageId":"257","endLine":3,"endColumn":43},{"ruleId":"254","severity":1,"message":"276","line":4,"column":22,"nodeType":"256","messageId":"257","endLine":4,"endColumn":29},{"ruleId":"254","severity":1,"message":"321","line":4,"column":31,"nodeType":"256","messageId":"257","endLine":4,"endColumn":36},{"ruleId":"254","severity":1,"message":"277","line":4,"column":38,"nodeType":"256","messageId":"257","endLine":4,"endColumn":47},{"ruleId":"254","severity":1,"message":"328","line":4,"column":49,"nodeType":"256","messageId":"257","endLine":4,"endColumn":54},{"ruleId":"254","severity":1,"message":"278","line":5,"column":24,"nodeType":"256","messageId":"257","endLine":5,"endColumn":28},{"ruleId":"254","severity":1,"message":"329","line":18,"column":7,"nodeType":"256","messageId":"257","endLine":18,"endColumn":22},{"ruleId":"288","severity":1,"message":"289","line":20,"column":23,"nodeType":"290","messageId":"273","endLine":20,"endColumn":25},{"ruleId":"254","severity":1,"message":"279","line":28,"column":10,"nodeType":"256","messageId":"257","endLine":28,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":28,"column":20,"nodeType":"256","messageId":"257","endLine":28,"endColumn":31},{"ruleId":"254","severity":1,"message":"280","line":29,"column":10,"nodeType":"256","messageId":"257","endLine":29,"endColumn":19},{"ruleId":"254","severity":1,"message":"281","line":29,"column":21,"nodeType":"256","messageId":"257","endLine":29,"endColumn":33},{"ruleId":"254","severity":1,"message":"282","line":30,"column":10,"nodeType":"256","messageId":"257","endLine":30,"endColumn":14},{"ruleId":"254","severity":1,"message":"283","line":30,"column":16,"nodeType":"256","messageId":"257","endLine":30,"endColumn":23},{"ruleId":"254","severity":1,"message":"269","line":3,"column":41,"nodeType":"256","messageId":"257","endLine":3,"endColumn":46},{"ruleId":"254","severity":1,"message":"274","line":9,"column":10,"nodeType":"256","messageId":"257","endLine":9,"endColumn":28},{"ruleId":"254","severity":1,"message":"275","line":9,"column":30,"nodeType":"256","messageId":"257","endLine":9,"endColumn":43},{"ruleId":"254","severity":1,"message":"277","line":10,"column":47,"nodeType":"256","messageId":"257","endLine":10,"endColumn":56},{"ruleId":"254","severity":1,"message":"278","line":11,"column":24,"nodeType":"256","messageId":"257","endLine":11,"endColumn":28},{"ruleId":"254","severity":1,"message":"306","line":24,"column":8,"nodeType":"256","messageId":"257","endLine":24,"endColumn":20},{"ruleId":"288","severity":1,"message":"289","line":42,"column":12,"nodeType":"290","messageId":"273","endLine":42,"endColumn":14},{"ruleId":"288","severity":1,"message":"289","line":45,"column":17,"nodeType":"290","messageId":"273","endLine":45,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":48,"column":17,"nodeType":"290","messageId":"273","endLine":48,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":51,"column":17,"nodeType":"290","messageId":"273","endLine":51,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":54,"column":17,"nodeType":"290","messageId":"273","endLine":54,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":57,"column":17,"nodeType":"290","messageId":"273","endLine":57,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":60,"column":17,"nodeType":"290","messageId":"273","endLine":60,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":69,"column":14,"nodeType":"290","messageId":"273","endLine":69,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":72,"column":19,"nodeType":"290","messageId":"273","endLine":72,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":75,"column":19,"nodeType":"290","messageId":"273","endLine":75,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":78,"column":19,"nodeType":"290","messageId":"273","endLine":78,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":81,"column":19,"nodeType":"290","messageId":"273","endLine":81,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":84,"column":19,"nodeType":"290","messageId":"273","endLine":84,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":87,"column":19,"nodeType":"290","messageId":"273","endLine":87,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":90,"column":19,"nodeType":"290","messageId":"273","endLine":90,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":93,"column":19,"nodeType":"290","messageId":"273","endLine":93,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":96,"column":19,"nodeType":"290","messageId":"273","endLine":96,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":99,"column":19,"nodeType":"290","messageId":"273","endLine":99,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":102,"column":19,"nodeType":"290","messageId":"273","endLine":102,"endColumn":21},{"ruleId":"254","severity":1,"message":"292","line":136,"column":7,"nodeType":"256","messageId":"257","endLine":136,"endColumn":20},{"ruleId":"284","severity":1,"message":"294","line":186,"column":8,"nodeType":"286","endLine":186,"endColumn":26,"suggestions":"330"},{"ruleId":"288","severity":1,"message":"289","line":247,"column":19,"nodeType":"290","messageId":"273","endLine":247,"endColumn":21},{"ruleId":"303","severity":1,"message":"304","line":361,"column":25,"nodeType":"305","endLine":361,"endColumn":57},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"no-unused-vars","'setUsername' is assigned a value but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'LinearProgress' is defined but never used.","'IconButton' is defined but never used.","'Modal' is defined but never used.","'makeStyles' is defined but never used.","'fileInput' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'signUp' is assigned a value but never used.","'signInWithEmailAndPassword' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","'onAuthStateChanged' is defined but never used.","'updateProfile' is defined but never used.","'orderBy' is defined but never used.","'Timestamp' is defined but never used.","'auth' is defined but never used.","'username' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'setUserEmail' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profileusername'. Either include it or remove the dependency array.","ArrayExpression",["333"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'miliSecs' is assigned a value but never used.","'removeElement' is assigned a value but never used.","'isClicked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'capturesList' and 'usersCaptured'. Either include them or remove the dependency array. You can also do a functional update 'setUsersCaptured(u => ...)' if you only need 'usersCaptured' in the 'setUsersCaptured' call.",["334"],"'captureExists' is assigned a value but never used.","'capturedByUser' is assigned a value but never used.","'capturedByUserVtwo' is assigned a value but never used.","'isCaptured' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'user' and 'username'. Either include them or remove the dependency array.",["335"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MoreVertIcon' is defined but never used.",["336"],"'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'AccountBoxIcon' is defined but never used.","'NewProfile' is defined but never used.","'profileView' is assigned a value but never used.","'closeProfile' is assigned a value but never used.","'storage' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["337"],"'useEffect' is defined but never used.","'ImageUpload' is defined but never used.","'collection' is defined but never used.","'onSnapshot' is defined but never used.","'query' is defined but never used.","'CardHeader' is defined but never used.","'CameraIcon' is defined but never used.","'CameraOutlinedIcon' is defined but never used.","'AddCommentIcon' is defined but never used.","'current_post' is assigned a value but never used.","'descriptionElementRef' is assigned a value but never used.","'where' is defined but never used.","'containsCapture' is assigned a value but never used.",["338"],"no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"341","fix":"349"},"Update the dependencies array to be: [profileusername]",{"range":"350","text":"351"},"Update the dependencies array to be: [postId, captures, capturesList, usersCaptured]",{"range":"352","text":"353"},"Update the dependencies array to be: [user, username]",{"range":"354","text":"355"},"Update the dependencies array to be: [capturesList, postId, usersCaptured]",{"range":"356","text":"357"},"Update the dependencies array to be: [username]",{"range":"358","text":"359"},{"range":"360","text":"353"},[1134,1136],"[profileusername]",[6550,6568],"[postId, captures, capturesList, usersCaptured]",[9365,9367],"[user, username]",[6417,6425],"[capturesList, postId, usersCaptured]",[662,664],"[username]",[5097,5115]]