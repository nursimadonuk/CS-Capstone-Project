{"ast":null,"code":"var _jsxFileName = \"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { collectPosts } from './firebase';\nimport { onSnapshot } from 'firebase/firestore';\nimport { Button, Input, makeStyles, Modal } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, ${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState(''); // runs piece of code on specific condition\n\n  useEffect(() => {\n    onSnapshot(collectPosts, snapshot => {\n      // when posts changes this code runs\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    });\n  }, []);\n\n  const signUp = event => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app_header_image\",\n              src: \"\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Lens Cleanse Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: signUp,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"app_header_image\" // get logo\n        // src=\"../Logo/logo.jpeg\"\n        ,\n        src: \"https://images.squarespace-cdn.com/content/v1/575a6067b654f9b902f452f4/1552683653140-0UUVQSSUEWVC73AWAEQG/300Logo.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Lens Cleanse!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setOpen(true),\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), posts.map(({\n      id,\n      post\n    }) => /*#__PURE__*/_jsxDEV(Post, {\n      username: post.username,\n      caption: post.caption,\n      imageUrl: post.imageUrl\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xIJy3ZFqjEesnmTV00EkNoP5urk=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/App.js"],"names":["React","useState","useEffect","Post","collectPosts","onSnapshot","Button","Input","makeStyles","Modal","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","username","setUsername","password","setPassword","email","setEmail","snapshot","docs","map","doc","id","post","data","signUp","event","e","target","value","caption","imageUrl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { collectPosts } from './firebase'\nimport { onSnapshot } from 'firebase/firestore';\nimport { Button, Input, makeStyles, Modal } from '@material-ui/core';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, ${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  \n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n\n  // runs piece of code on specific condition\n  useEffect(() => {\n    onSnapshot(collectPosts, (snapshot) => {\n      // when posts changes this code runs\n      setPosts(snapshot.docs.map(doc=> ({\n        id: doc.id,\n        post: doc.data()\n      })));\n\n    })\n  }, []);\n\n  const signUp = (event) => {\n\n  }\n\n  return (\n    <div className=\"app\">\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        >\n          <div style={modalStyle} className={classes.paper}>\n            <form>\n              <center>\n                <img\n                  className=\"app_header_image\"\n                  src=\"\"\n                  alt=\"\"\n                />\n                <h4>Lens Cleanse Sign Up</h4>\n                \n                <Input\n                  type=\"text\"\n                  placeholder=\"username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n                <Input\n                  type=\"text\"\n                  placeholder=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n                <Input\n                  type=\"text\"\n                  placeholder=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <Button onClick={signUp}>Sign Up</Button> \n              </center>\n            </form>\n          </div>\n        </Modal>\n\n      <div className=\"app_header\">\n        <img\n          className=\"app_header_image\"\n          // get logo\n          // src=\"../Logo/logo.jpeg\"\n          src=\"https://images.squarespace-cdn.com/content/v1/575a6067b654f9b902f452f4/1552683653140-0UUVQSSUEWVC73AWAEQG/300Logo.png\" \n          alt=\"\"\n        />\n        <h1>Welcome to Lens Cleanse!!</h1>\n      </div>\n\n      <Button onClick={() => setOpen(true)}>Sign Up</Button> \n\n      {\n        posts.map(({id, post}) => (\n          <Post key={id} username={post.username} caption={post.caption} imageUrl={post.imageUrl}/>\n        ))\n      } \n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}