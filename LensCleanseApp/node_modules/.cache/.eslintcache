[{"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/index.js":"1","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/App.js":"2","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js":"3","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Settings.js":"4","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signin.js":"5","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/reportWebVitals.js":"6","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signup.js":"7","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/About.js":"8","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Newprofile.js":"9","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/firebase.js":"10","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Post.js":"11","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Navbar.js":"12","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Photo.js":"13","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Drafts.js":"14","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/DraftPhoto.js":"15","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Captured.js":"16"},{"size":1037,"mtime":1637878784373,"results":"17","hashOfConfig":"18"},{"size":3694,"mtime":1637879097082,"results":"19","hashOfConfig":"18"},{"size":9357,"mtime":1638567635795,"results":"20","hashOfConfig":"18"},{"size":142,"mtime":1634168045687,"results":"21","hashOfConfig":"18"},{"size":4717,"mtime":1635375648455,"results":"22","hashOfConfig":"18"},{"size":362,"mtime":1632176691883,"results":"23","hashOfConfig":"18"},{"size":5167,"mtime":1635549254990,"results":"24","hashOfConfig":"18"},{"size":3681,"mtime":1638925524139,"results":"25","hashOfConfig":"18"},{"size":3042,"mtime":1639129256696,"results":"26","hashOfConfig":"18"},{"size":930,"mtime":1638292269990,"results":"27","hashOfConfig":"18"},{"size":17235,"mtime":1638929943268,"results":"28","hashOfConfig":"18"},{"size":8442,"mtime":1638928083919,"results":"29","hashOfConfig":"18"},{"size":12083,"mtime":1638829820245,"results":"30","hashOfConfig":"18"},{"size":1674,"mtime":1638294519045,"results":"31","hashOfConfig":"18"},{"size":10727,"mtime":1639129937903,"results":"32","hashOfConfig":"18"},{"size":2461,"mtime":1638927230835,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1rpfx4g",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"36"},"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/index.js",[],["77","78"],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/App.js",["79","80"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { collectPosts, auth } from './firebase'\nimport { onSnapshot, orderBy, query } from 'firebase/firestore';\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { makeStyles } from '@material-ui/core';\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport Navbar from './Navbar';\n\nconst splitTime = (date) => {\n  if(!date) { return [] }\n  date = date.toDate()\n  // const date_elements = [date.getDay(), date.getDate(), date.getMonth(), date.getFullYear(), date.getHours(), date.getMinutes()]\n  return date\n}\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n      if (authUser) {\n        // user logged in\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          // do not update username\n        } else {\n          // NEW USER\n          return updateProfile(authUser, {\n            displayName: username,\n          });\n        }\n\n      } else {\n        // user logged out\n        setUser(null);\n      }\n    })\n    return () => {\n      // some cleanup action\n      unsubscribe();\n    }\n  }, [user, username]);\n\n  // runs piece of code on specific condition\n  useEffect(() => {\n    onSnapshot(query(collectPosts, orderBy('timestamp', 'desc')), (snapshot) => {\n      // when posts changes this code runs\n      console.log(\"Snapshot\", snapshot.docs)\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n\n    })\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"app\">\n\n        {user?.displayName ? (\n          <Navbar user={user} username={user.displayName} ></Navbar>\n        ) : (\n          <Navbar></Navbar>\n        )}\n\n        <br></br>\n        <br></br>\n\n        {/*user?.displayName ? (           \n          <ImageUpload username={user.displayName} />\n\n        ) : (\n          <h3 className=\"upload-login-message\">Login to upload an image...</h3>\n        )*/}\n\n        {\n          posts.map(({ id, post }) => (\n            <div className=\"posts\" >\n              <Post\n                key={id}\n                postId={id}\n                user={user}\n                username={post.username}\n                caption={post.caption}\n                imageUrl={post.imageUrl}\n                iso={post.ISO}\n                cameraType={post.cameraType}\n                fStop={post.fStop}\n                shutterSpeed={post.shutterSpeed}\n                captures={post.captures}\n                focalLength={post.focalLength}\n                lensType={post.lensType}\n                lighting={post.lighting}\n                location={post.location}\n                other={post.other}\n                numComments={post.numComments}\n                timePosted={splitTime(post.timestamp)}\n              />\n            </div>\n          ))\n        }\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blue[500],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: red[500],\n    },\n  },\n});\n\nexport default App;\n","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js",["81","82","83","84","85"],"// import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { storage, collectPosts, collectDrafts } from './firebase';\nimport { ref, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\nimport { serverTimestamp, FieldValue, addDoc } from 'firebase/firestore';\nimport { TextField, Input, LinearProgress, Button, IconButton, Modal, makeStyles } from \"@material-ui/core\"\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport \"./Post.css\"\nimport \"./imageUpload.css\"\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n\nfunction ImageUpload({ username }) {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState('');\n  const [cameraType, setCameraType] = useState('');\n  const [ISO, setISO] = useState(0);\n  const [lensType, setLensType] = useState('');\n  const [fStop, setFStop] = useState(0);\n  const [shutterSpeed, setShutterSpeed] = useState(\"\");\n  const [lighting, setLighting] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [focalLength, setFocalLength] = useState(0);\n  const [other, setOther] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n\n  const fileInput = React.createRef()\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  }\n  \n  const handleDraftUpload = () => {\n    if (!image) {\n      alert('PLEASE MAKE SURE YOU ENTERED AN IMAGE');\n      return;\n    }\n      const uploadTask = uploadBytesResumable(ref(storage, `images/${image.name}`), image);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          // progress function\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n          alert(error.message);\n        },\n        () => {\n            getDownloadURL(ref(storage, `images/${image.name}`))\n            .then(url => {\n              addDoc(collectDrafts, {\n                caption: caption,\n                imageUrl: url,\n                username: username,\n                ISO: ISO,\n                cameraType: cameraType,\n                lensType: lensType,\n                fStop: fStop,\n                shutterSpeed: shutterSpeed,\n                lighting: lighting,\n                location: location,\n                focalLength: focalLength,\n                other: other\n\n              });\n\n              setProgress(0);\n              setCaption(\"\");\n              setImage(null);\n              setCameraType(\"\");\n              setISO(0);\n              setLensType(\"\");\n              setFStop(0);\n              setShutterSpeed(\"\");\n              setLighting(\"\");\n              setLocation(\"\");\n              setFocalLength(0);\n              setOther(\"\");\n              setOpen(true);\n\n            })\n          }\n\n      )\n\n  }\n\n  const handleUpload = () => {\n\n    if (!image || !caption) {\n      alert('PLEASE MAKE SURE YOU ENTERED BOTH IMAGE AND CAPTION')\n    }\n    else {\n\n      const uploadTask = uploadBytesResumable(ref(storage, `images/${image.name}`), image);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          // progress function\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n          alert(error.message);\n        },\n        () => {\n          let time = serverTimestamp(FieldValue)\n          setTimeout(() => {\n            getDownloadURL(ref(storage, `images/${image.name}`))\n            .then(url => {\n              addDoc(collectPosts, {\n                timestamp: time,\n                caption: caption,\n                imageUrl: url,\n                username: username,\n                captures: [],\n                ISO: ISO,\n                cameraType: cameraType,\n                lensType: lensType,\n                fStop: fStop,\n                shutterSpeed: shutterSpeed,\n                lighting: lighting,\n                location: location,\n                focalLength: focalLength,\n                other: other,\n                numComments: 0\n\n              });\n\n              setProgress(0);\n              setCaption(\"\");\n              setImage(\"https://st2.depositphotos.com/1561359/12101/v/950/depositphotos_121012076-stock-illustration-blank-photo-icon.jpg\");\n              setCameraType(\"\");\n              setISO(0);\n              setLensType(\"\");\n              setFStop(0);\n              setShutterSpeed(\"\");\n              setLighting(\"\");\n              setLocation(\"\");\n              setFocalLength(0);\n              setOther(\"\");\n              setOpen(true);\n\n            })\n\n          }, 500)\n          }\n\n      )\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme} className=\"imageupload\">\n\n        <Dialog\n          open={open}\n          onClose={() => setOpen(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n              <img\n                  className=\"app_header_image\"\n                  src=\"LensCleanse.png\"\n                  alt=\"Lens Cleanse\"\n                  width='80'\n                  height='auto'\n                />\n                <h1 className=\"app_header_h1\">Lens Cleanse</h1>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            Your image has been successfully uploaded to Lens Cleanse! \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setOpen(false)}>OK</Button>\n          </DialogActions>\n        </Dialog>\n      <div>\n\n        <progress className=\"imageupload_progress\" value={progress} max=\"100\" />\n        <div className=\"uploadFileComponents\">\n          <TextField id=\"standard-basic\" className=\"imageupload_caption\" label=\"Enter a caption\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setCaption(event.target.value)} value={caption} />\n        </div>\n\n        <div className=\"uploadFileComponents\">\n          <label htmlFor=\"contained-button-file\">\n            <Input className=\"file-input\" accept=\"image/*\" id=\"contained-button-file\" type=\"file\" onChange={handleChange} />\n          </label>\n\n          <div className=\"uploadFile\">\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Camera Type\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setCameraType(event.target.value)} value={cameraType} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter ISO\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setISO(event.target.value)} value={ISO} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Lens\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setLensType(event.target.value)} value={lensType} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter fStop\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setFStop(event.target.value)} value={fStop} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Shutter Speed\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setShutterSpeed(event.target.value)} value={shutterSpeed} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Lighting Details\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setLighting(event.target.value)} value={lighting} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Location\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setLocation(event.target.value)} value={location} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Focal Length\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setFocalLength(event.target.value)} value={focalLength} />\n            <TextField className=\"imageupload_photoInfo_other\" label=\"Enter Other Info\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setOther(event.target.value)} value={other} />\n\n          </div>\n\n          <div className=\"image-upload-buttons\">\n            <button className=\"bottom-buttons\" variant=\"contained\" color=\"primary\" onClick={handleDraftUpload}>\n              Save As Draft\n            </button>\n            <button className=\"bottom-buttons\" variant=\"contained\" color=\"primary\" onClick={handleUpload}>\n              Upload\n            </button>\n          </div>\n        </div>\n\n      </div>\n    </ThemeProvider>\n  )\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blue[500],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: red[500],\n    },\n  },\n});\n\n\nexport default ImageUpload\n","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Settings.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signin.js",["86","87","88","89"],"import React, { useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, updateProfile, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from './firebase'\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport './Signin.css'\n\nfunction Signin() {\n    let history = useHistory();\n\n    const toSignUp = () => {\n        history.push('/signup')\n    }\n\n    const toMain = () => {\n        history.push('/')\n    } \n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [user, setUser] = useState(null);\n    const [signinpassword, setSigninPassword] = useState('');\n    const [signinemail, setSigninEmail] = useState('');\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n          if (authUser) {\n            // user logged in\n            console.log(authUser);\n            setUser(authUser);\n    \n            if (authUser.displayName) {\n              // do not update username\n            } else {\n              // NEW USER\n              return updateProfile(authUser, {\n                displayName: username,\n              });\n            }\n    \n          } else {\n            // user logged out\n            setUser(null);\n          }\n        })\n        return () => {\n          // some cleanup action\n          unsubscribe();\n        }\n      }, [user, username]);\n\n    const signIn = (event) => {\n        event.preventDefault();\n    \n        signInWithEmailAndPassword(auth, signinemail, signinpassword)\n          .catch((error) => alert(error.message))\n\n        if(user) {\n            history.push('/');\n        }\n    }\n\n    const signUp = (event) => {\n        event.preventDefault();\n    \n        createUserWithEmailAndPassword(auth, email, password)\n          .then((authUser) => {\n            return updateProfile(authUser.user, {\n              displayName: username\n            })\n          })\n          .catch((error) => alert(error.message));\n    }\n\n    return(\n        <div className=\"wrap\" >\n            <Navbar></Navbar>\n            <div className=\"login\">\n                <div className=\"sign-in\" style={{ backgroundImage: \"url(/bg.jpg)\" }}>\n                    <form className=\"sign-in-form\">\n                        <div className=\"section\">\n                            <div className=\"heading\">\n                                <h4 className=\"begin\">Log In to </h4>\n                                <h3 className=\"title\"> Lens Cleanse </h3>\n                            </div>\n                        </div>\n                        <br></br>\n                        <div className=\"section\">\n                            <input id=\"user\" type=\"text\" className=\"section-input\" placeholder=\"Email\" value={signinemail} onChange={(e) => setSigninEmail(e.target.value)} ></input>\n                        </div>\n                        <div className=\"section\">\n                            <input id=\"user\" type=\"password\" className=\"section-input\" placeholder=\"Password\" value={signinpassword} onChange={(e) => setSigninPassword(e.target.value)} ></input>\n                        </div>\n                        <div className=\"section\">\n                            <button type=\"submit\" className=\"section-button\" onClick={signIn}> SIGN IN </button>\n                        </div>\n                        <div className=\"section\">\n                            <div className=\"bottom\">\n                                <div className=\"remember\">\n                                    <input className=\"remember-check\" type=\"checkbox\" id=\"remember\" name=\"remember\" value=\"remember\"/>\n                                    <label className=\"remember-me\" for=\"remember\"> Remember Me</label>\n                                </div>\n                                <div className=\"forgot\">\n                                    <a href=\"#forgot\">Forgot Password</a>\n                                </div>\n                            </div>\n\t                    </div>\n                        <br></br>\n                        <br></br>\n                        <div className=\"section\">\n                            <p className=\"textt\">&mdash; Don't Have an Account &mdash;</p>\n                        </div>\n                        <div class=\"section\">\n                            <button className=\"bottom-buttons\" onClick={toSignUp}>SIGN UP</button>\n                            <button className=\"bottom-buttons\" onClick={toMain}>MAIN PAGE</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Signin;","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/reportWebVitals.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signup.js",["90","91","92"],"import React, { useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, updateProfile, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from './firebase'\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { Button, Input, makeStyles, Modal } from '@material-ui/core';\nimport './Signup.css'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 10;\n  const left = 10;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, ${left}%)`,\n  };\n}\n\nfunction Signup() {\n    let history = useHistory();\n\n    const toSignIn = () => {\n        history.push('/login')\n    }\n\n    const toMain = () => {\n        history.push('/')\n    } \n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [user, setUser] = useState(null);\n    const [open, setOpen] = useState(false);\n    const [modalStyle] = React.useState(getModalStyle);\n    const classes = useStyles();\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n          if (authUser) {\n            // user logged in\n            console.log(authUser);\n            setUser(authUser);\n    \n            if (authUser.displayName) {\n              // do not update username\n            } else {\n              // NEW USER\n              return updateProfile(authUser, {\n                displayName: username,\n              });\n            }\n    \n          } else {\n            // user logged out\n            setUser(null);\n          }\n        })\n        return () => {\n          // some cleanup action\n          unsubscribe();\n        }\n      }, [user, username]);\n\n\n    const signUp = (event) => {\n        event.preventDefault();\n    \n        createUserWithEmailAndPassword(auth, email, password)\n          .then((authUser) => {\n            return updateProfile(authUser.user, {\n              displayName: username\n            })\n          })\n          .catch((error) => alert(error.message));     \n    }\n\n    return(\n      <div className=\"wrap\" >\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n        >\n          <div style={modalStyle} className={classes.paper}>\n            <form className=\"app_signup\">\n              <center className='sign_up_heading'>\n                <img\n                  className=\"app_header_image\"\n                  src=\"LensCleanse.png\"\n                  alt=\"Lens Cleanse\"\n                  width='80'\n                  height='auto'\n                />\n                <h1 className=\"app_header_h1\">Lens Cleanse</h1>\n              </center>\n\n              <h4> You have successfully signed up for your Lens Cleanse account! Now you can sign in and start sharing your awesome work! </h4>\n\n            </form>\n          </div>\n        </Modal>\n\n        <Navbar></Navbar>\n        <div className=\"login\">\n            <div className=\"sign-in\" style={{ backgroundImage: \"url(/bg.jpg)\" }}>\n                <form className=\"sign-in-form\">\n                    <div className=\"section\">\n                        <div className=\"heading\">\n                            <h4 className=\"begin\">Sign up for </h4>\n                            <h3 className=\"title\"> Lens Cleanse </h3>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"section\">\n                        <input id=\"user\" type=\"text\" className=\"section-input\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} ></input>\n                    </div>\n                    <div className=\"section\">\n                        <input id=\"user\" type=\"text\" className=\"section-input\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} ></input>\n                    </div>\n                    <div className=\"section\">\n                        <input id=\"user\" type=\"password\" className=\"section-input\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} ></input>\n                    </div>\n                    <div className=\"section\">\n                        <button type=\"submit\" className=\"section-button\" onClick={signUp}> SIGN UP </button>\n                    </div>\n\n                    <br></br>\n                    <br></br>\n                    <div className=\"section\">\n                        <p className=\"textt\">&mdash; Already Have an Account? &mdash;</p>\n                    </div>\n                    <div class=\"section\">\n                        <button className=\"bottom-buttons\" onClick={toSignIn}>SIGN IN</button>\n                        <button className=\"bottom-buttons\" onClick={toMain}>MAIN PAGE</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Signup;","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/About.js",["93","94"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Navbar from './Navbar';\nimport { auth } from './firebase'\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport InstagramIcon from '@mui/icons-material/Instagram';\n\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\n\nfunction About() {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n      if (authUser) {\n        // user logged in\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          // do not update username\n        } else {\n          // NEW USER\n          return updateProfile(authUser, {\n            displayName: username,\n          });\n        }\n\n      } else {\n        // user logged out\n        setUser(null);\n      }\n    })\n    return () => {\n      // some cleanup action\n      unsubscribe();\n    }\n  }, [user, username]);\n  return (\n    <div>\n      <div>\n        {user?.displayName ? (\n          <Navbar user={user} username={user.displayName} ></Navbar>\n        ) : (\n          <Navbar></Navbar>\n        )}\n      </div>\n      <div className={classes.wrapper}>\n        <div className={classes.secondWrappers}>\n          <div className={classes.aboutInfo}>\n            <p>\n              As photographers we long for an app that is dedicated to just us and our professional work where we can share our photos with other photographers. Photographers want to know what goes into other photographers' work and how they create them. Lens cleanse will allow us to learn just that.\n            </p>\n          </div>\n\n          <div>\n            <br />\n            <br />\n            <br />\n            <h2>Contact Us</h2>\n            \n            <p> 63-10 Something Ave, Rego Park, </p>\n            <p> NY 11429</p>\n            <p>info@lenscleanse.com</p>\n            <p>(347) 500- 4000</p>\n\n            <p>(646) 200- 9999</p>\n            <div className={classes.icons}>\n              <button className={classes.icons}>\n                <FacebookIcon />\n              </button>\n              <button className={classes.icons}>\n                <TwitterIcon />\n              </button>\n              <button className={classes.icons}>\n                <InstagramIcon />\n              </button>\n            </div>\n          </div>\n\n\n\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    margin: \"0 auto\",\n    width: \"100%\",\n    height: \"800px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundImage: \"url(/bg.jpg)\",\n    // backgroundImage: \"url(https://images.unsplash.com/photo-1612144788280-c9096c34486a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80)\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    fontWeight: \"500\",\n    fontSize: 20,\n  },\n  secondWrappers: {\n    flex: 1,\n    width: \"500px\",\n    //border: \"5px solid red\",\n    margin: \"5px 120px\",\n    fontSize: 25,\n    padding: \"35px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"rgba(23, 91, 146, 0.7)\",\n    padding: \"45px\",\n    color: \"white\",\n    lineHeight: \"30px\",\n    fontFamily: \"Cambria\",\n    fontWeight: \"semibold\"\n  },\n  icons: {\n    border: \"none\",\n    backgroundColor: \"transparent\",\n    color: \"white\"\n  },\n  aboutInfo: {\n\n\n  },\n\n}));\n\nexport default About","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Newprofile.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/firebase.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Post.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React, { useState, useEffect, useRef } from 'react';\nimport './Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { collection, onSnapshot, doc, addDoc, serverTimestamp, FieldValue, orderBy, query, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db, collectPosts } from './firebase'\nimport { Button, Input, TextField } from '@material-ui/core';\n\nimport CameraIcon from '@mui/icons-material/Camera';\nimport CameraOutlinedIcon from '@mui/icons-material/CameraOutlined';\nimport AddCommentIcon from '@mui/icons-material/AddComment';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\n\nimport NewProfile from './Newprofile';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst parseDay = (day) => {\n  if(day == 0) {\n    return \"Mon\"\n  }\n  else if(day == 1) {\n    return \"Tue\"\n  }\n  else if(day == 2) {\n    return \"Wed\"\n  }\n  else if(day == 3) {\n    return \"Thu\"\n  }\n  else if(day == 4) {\n    return \"Fri\"\n  }\n  else if(day == 5) {\n    return \"Sat\"\n  }\n  else if(day == 6) {\n    return \"Sun\"\n  }\n  else {\n    return \"\"\n  }\n}\n\nconst parseTime = (datePosted) => {\n    const now = new Date();\n\n    if(!datePosted) { return \"\" }\n\n    try {\n      let miliSecs = datePosted.getTime();\n    }\n    catch(err) {\n      return \"Posted seconds ago\"\n    }\n\n    const secDifference = (now.getTime() - datePosted.getTime()) / 1000;\n\n    if(secDifference < 10) {\n      return \"Posted a few seconds ago\"\n    }\n    else if (secDifference < 60) {\n      let result = \"Posted \" + secDifference;\n      if (secDifference == 1) {\n        result += \" second ago\";\n      }\n      else {\n        result += \" seconds ago\";\n      }\n      return result;\n    }\n    else if (secDifference < 3600) {\n      let result = \"Posted \" + Math.floor(secDifference/60);\n      if (Math.floor(secDifference/60) == 1) {\n        result += \" minute ago\";\n      }\n      else {\n        result += \" minutes ago\";\n      }\n      return result;\n    }\n    else if (secDifference < 86400) {\n      let result = \"Posted \" + Math.floor(secDifference/3600);\n      if (Math.floor(secDifference/3600) == 1) {\n        result += \" hour ago\";\n      }\n      else {\n        result += \" hours ago\";\n      }\n      return result;\n    }\n    else if (secDifference < 1296000) {\n      let result = \"Posted \" + Math.floor(secDifference/86400);\n      if (Math.floor(secDifference/3600) == 1) {\n        result += \" day ago\";\n      }\n      else {\n        result += \" days ago\";\n      }\n      return result;\n    }\n    else {\n      let result = \"Posted \" + (datePosted.getMonth()+1)\n      result += \"/\"\n      result += datePosted.getDate()\n      result += \"/\"\n      result += datePosted.getFullYear()\n      result += \", \"\n      result += parseDay(datePosted.getDay())\n      result += \" at \"\n      result += datePosted.getHours()\n      result += \":\"\n      if (datePosted.getMinutes() < 10) {\n        result += \"0\"\n      }\n      result += datePosted.getMinutes()\n      return result\n    }\n}\n\nconst removeElement= (capList, item) => {\n  const array = capList\n  const index = array.indexOf(item);\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n  return array\n}\n\nfunction Post({ postId, username, user, caption, imageUrl, iso, cameraType, fStop, shutterSpeed, other,\n  captures,\n  focalLength,\n  lensType,\n  lighting,\n  location,\n  numComments,\n  timePosted }) {\n\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  const [commentLimit, setCommentLimit] = useState(null);\n  const [ownPost, setOwnPost] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n  const [openEdit, setOpenEdit] = useState(false);\n  const [openUpdateMessage, setOpenUpdateMessage] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n\n  const [updateCaption, setUpdateCaption] = useState(caption);\n  const [updateCameraType, setUpdateCameraType] = useState(cameraType);\n  const [updateISO, setUpdateISO] = useState(iso);\n  const [updateLensType, setUpdateLensType] = useState(lensType);\n  const [updateFStop, setUpdateFStop] = useState(fStop);\n  const [updateShutterSpeed, setUpdateShutterSpeed] = useState(shutterSpeed);\n  const [updateLighting, setUpdateLighting] = useState(lighting);\n  const [updateLocation, setUpdateLocation] = useState(location);\n  const [updateFocalLength, setUpdateFocalLength] = useState(focalLength);\n  const [updateOther, setUpdateOther] = useState(other);\n\n  const [userCaptured, setUserCaptured] = useState(\"\")\n\n  useEffect(() => {\n    let unsubscribe;\n    if (postId) {\n      unsubscribe = onSnapshot(query(collection(doc(collectPosts, postId), 'comments'), orderBy('timestamp', 'desc')), (snapshot) => {\n        setComments(snapshot.docs.map((doc) => ({\n          id: doc.id,\n          comment: doc.data()\n        })));\n      });\n    }\n    return () => {\n      unsubscribe();\n    };\n  }, [postId, comment])\n\n\n  const postComment = (event) => {\n    event.preventDefault();\n    addDoc(collection(doc(collectPosts, postId), 'comments'), {\n      text: comment,\n      username: user.displayName,\n      timestamp: serverTimestamp(FieldValue)\n    });\n    const current_post = doc(collectPosts, postId);\n    updateDoc(current_post, {\n      numComments: numComments+1\n    });\n    setComment('');\n  }\n\n  const addCapture = (event) => {\n    event.preventDefault();\n    const current_post = doc(collectPosts, postId)\n    updateDoc(current_post, {\n      captures: [...captures, user.displayName]\n    });\n  }\n\n  const removeCapture = (event) => {\n    event.preventDefault();\n    const current_post = doc(collectPosts, postId)\n    updateDoc(current_post, {\n      captures: removeElement(captures, user.displayName)\n    });\n  }\n\n  useEffect(() => { \n    if (numComments > 2) {\n      setCommentLimit(\"true\");\n    }\n  }, [numComments])\n\n\n  useEffect(() => {\n    if(!user) {\n      setOwnPost(null);\n    }\n    else if(user.displayName != username) {\n      setOwnPost(null);\n    }\n    else {\n      setOwnPost('true');\n    }\n  }, [])\n\n  const commentView = () => {\n    setOpen(true)\n  } \n\n  const deleteView = () => {\n    if(openDelete) {\n      setOpenDelete(false)\n    }\n    else {\n      setOpenDelete(true)\n    }\n    \n  }\n\n  const deletePost = () => {\n    const current_post = doc(collectPosts, postId)\n    updateDoc(current_post, {\n      captures: []\n    })\n    comments.map(({ id, comment }) => (\n      deleteDoc(doc(collection(doc(collectPosts, postId), 'comments'), id))\n    ))\n    deleteDoc(doc(db, 'posts', postId))\n  }\n\n  const editView = () => {\n    if(openEdit) {\n      setOpenEdit(false)\n    }\n    else {\n      setOpenEdit(true)\n    }\n    \n  }\n\n  const updatePost = (event) => {\n    event.preventDefault();\n    const current_post = doc(collectPosts, postId);\n    updateDoc(current_post, {\n      caption: updateCaption,\n      cameraType: updateCameraType,\n      ISO: updateISO,\n      lensType: updateLensType,\n      fStop: updateFStop,\n      shutterSpeed: updateShutterSpeed,\n      lighting: updateLighting,\n      location: updateLocation,\n      focalLength: updateFocalLength,\n      other: updateOther\n    });\n\n    setOpenEdit(false);\n    setOpenUpdateMessage(true);\n\n  }\n\n  const profileView = () => {\n    if(openProfile) {\n      setOpenProfile(false)\n    } else {\n      setOpenProfile(true)\n    }\n      \n  }\n\n  const commentBoxRef = useRef();\n\n  return (\n    <div className=\"post\">\n\n      <Dialog\n        open={open}\n        onClose={() => setOpen(false)}\n        scroll={'paper'}\n        className='post-dialogs'\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">\n          <h1 className=\"app_header_h1\">Lens Cleanse Comments</h1>\n        </DialogTitle>\n        <DialogContent className='post-dialogs'>\n          <div className='post_comments'>\n            {comments.map(({ id, comment }) => (\n              <h4 className='a_comment'> <strong>{comment.username}</strong> {comment.text} </h4>\n            ))}\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <Dialog\n        open={openDelete}\n        onClose={() => setOpenDelete(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        className='post-dialogs'\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          <h1 className=\"app_header_h1\">Lens Cleanse Delete</h1>\n        </DialogTitle>\n        <DialogContent className='post-dialogs'>\n          <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to delete this post?\n          </DialogContentText>\n        </DialogContent >\n        <DialogActions>\n            <div className='post_delete_buttons'>\n                <button className=\"bottom-buttons\" onClick={deletePost}> YES </button>\n                <button className=\"bottom-buttons\" onClick={deleteView}> CANCEL </button>\n            </div>\n        </DialogActions>\n      </Dialog>\n\n\n      <Dialog \n      open={openEdit}\n      onClose={() => setOpenEdit(false)} \n      \n     >\n        <DialogTitle>\n        <h1 className=\"app_header_h1\">Lens Cleanse Edit</h1>\n        </DialogTitle>\n        <DialogContent className=\"edit-dialog\">\n            <div className=\"uploadFile\">\n                <TextField id=\"standard-basic\" className=\"imageupload_caption\" label=\"Enter a caption\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateCaption(event.target.value)} value={updateCaption} />\n                <TextField className=\"imageupload_photoInfo\" label=\"Enter Camera Type\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateCameraType(event.target.value)} value={updateCameraType} />\n                <TextField className=\"imageupload_photoInfo\" label=\"Enter ISO\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateISO(event.target.value)} value={updateISO} />\n                <TextField className=\"imageupload_photoInfo\" label=\"Enter Lens\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateLensType(event.target.value)} value={updateLensType} />\n                <TextField className=\"imageupload_photoInfo\" label=\"Enter fStop\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateFStop(event.target.value)} value={updateFStop} />\n                <TextField className=\"imageupload_photoInfo\" label=\"Enter Shutter Speed\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateShutterSpeed(event.target.value)} value={updateShutterSpeed} />\n                <TextField className=\"imageupload_photoInfo\" label=\"Enter Lighting Details\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateLighting(event.target.value)} value={updateLighting} />\n                <TextField className=\"imageupload_photoInfo\" label=\"Enter Location\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateLocation(event.target.value)} value={updateLocation} />\n                <TextField className=\"imageupload_photoInfo\" label=\"Enter Focal Length\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateFocalLength(event.target.value)} value={updateFocalLength} />\n                <TextField className=\"imageupload_photoInfo_other\" label=\"Enter Other Info\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setUpdateOther(event.target.value)} value={updateOther} />\n              </div>\n        </DialogContent>\n        <DialogActions>\n              <div className=\"post-edit-button\">\n                <button className=\"bottom-buttons\" variant=\"contained\" color=\"primary\" onClick={updatePost}>\n                  Update\n                </button>\n              </div>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        open={openUpdateMessage}\n        onClose={() => setOpenUpdateMessage(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        className='post-dialogs'\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          <h1 className=\"app_header_h1\">Lens Cleanse</h1>\n        </DialogTitle>\n        <DialogContent className='post-dialogs'>\n          <DialogContentText id=\"alert-dialog-description\">\n          <h3> Your post has been updated successfully! </h3>\n          </DialogContentText>\n        </DialogContent >\n      </Dialog>\n\n      <Dialog\n        fullScreen\n        open={openProfile}\n        onClose={() => setOpenProfile(false)}\n        TransitionComponent={Transition}\n        className=\"profile-dialog\"\n      >\n        <center className='profile-nav-heading'>\n\n          <div className=\"profile-nav\">\n            <div className=\"profile-nav-left\">\n              <img\n                className=\"app_header_image\"\n                src=\"LensCleanse.png\"\n                alt=\"Lens Cleanse\"\n                width='80'\n                height='auto'\n              />\n              <h1 className=\"app_header_h1\">{username}</h1>\n            </div>\n\n            <IconButton\n                className=\"x-button\"\n                color=\"inherit\"\n                onClick={profileView}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n            </IconButton>\n          </div>\n\n        </center>\n\n        <NewProfile profileusername={username} profileuser={user}></NewProfile>\n\n      </Dialog>\n\n      <div className=\"post_header\">\n        <div className=\"post_header_left\">\n          <Avatar\n            className=\"post_avatar\"\n            alt={username}\n            src={\"/static/images/avatar/1.jpg\"}\n          />\n          <h3 onClick={profileView}> {username} </h3>\n\n        </div>\n\n        {ownPost ? (\n          <div>\n            <Button className=\"post_header_editbutton\" onClick={editView} disabled={user == null} ><EditIcon/></Button>\n            <Button className=\"post_header_editbutton\" onClick={deleteView} disabled={user == null} ><DeleteIcon/></Button>\n          </div>\n        ) : (\n          <div>\n            {/*<Button className=\"post_header_button\" onclick={profileView}>View Profile</Button>*/}\n          </div>\n\n        )}\n        \n      </div>\n\n      <div className=\"inner-post\">\n\n        <img id=\"img\" className=\"image\" src={imageUrl} alt=\"\" />\n\n        <h4 className='info1'>Camera: {cameraType} </h4>\n        <h4 className='info2'>Lens Type: {lensType} </h4>\n        <h4 className='info3'>ISO: {iso} </h4>\n        <h4 className='info4'>f-Stop: {fStop} </h4>\n        <h4 className='info5'>Shutter Speed: {shutterSpeed} s </h4>\n        <h4 className='info6'>Focal Length: {focalLength} mm</h4>\n        <h4 className='info7'>Lighting: {lighting} </h4>\n        <h4 className='info8'>Location: {location} </h4>\n        <h4 className='info9'>Other Info: {other} </h4>\n\n      </div>\n\n      <br></br>\n      <div className='post_like_comment'>\n        {\n          user && captures.find(capturedNames => capturedNames === user.displayName)\n            ?\n            <Button onClick={removeCapture} disabled={user == null}><CameraOutlinedIcon /></Button>\n            :\n            <Button onClick={addCapture} disabled={user == null}><CameraIcon /></Button>\n          }\n        <Button onClick={() => {\n          commentBoxRef.current.focus();\n        }}\n        className='b' disabled={user==null} ><AddCommentIcon /></Button>\n      </div>\n      <br></br>\n      <div>\n        {/* {} */}\n        <h4 className=\"post_captures\"><strong> {captures.length} captures </strong></h4>\n      </div>\n\n      <h4 className=\"post_text\"> <strong>{username}</strong> {caption}</h4>\n\n      {commentLimit ? (\n        <div className=\"comment_container\">\n          <a className=\"comment_number\" onClick={commentView}>View all {numComments} comments</a>\n        </div>\n\n        ) : (\n          <div className='post_comments'>\n            {comments.map(({ id, comment }) => (\n              <h4 className='a_comment'> <strong>{comment.username}</strong> {comment.text} </h4>\n            ))}\n          </div>\n        )}\n\n\n      {\n        user && (\n          <form className='post_commentbox'>\n            <Input\n              id='t'\n              ref={commentBoxRef}\n              className='post_input'\n              type='text'\n              placeholder='Add a comment...'\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            <Button\n              className=\"post_button\"\n              disabled={!comment}\n              type='submit'\n              onClick={postComment}\n            >Post</Button>\n          </form>\n        )\n      }\n\n      <p className='time'> {parseTime(timePosted)} </p>\n\n    </div >\n  )\n}\n\nexport default Post","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Navbar.js",["126","127","128","129","130","131"],"import React, { useState } from 'react';\nimport './Navbar.css';\nimport { auth } from './firebase'\nimport { signOut } from \"firebase/auth\";\nimport { useHistory } from 'react-router-dom';\nimport { Form, FormControl } from 'react-bootstrap';\nimport { Button } from '@material-ui/core';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport Slide from '@mui/material/Slide';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport PowerSettingsNewIcon from '@mui/icons-material/PowerSettingsNew';\nimport CollectionsIcon from '@mui/icons-material/Collections';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport InsertPhotoIcon from '@mui/icons-material/InsertPhoto';\nimport CameraIcon from '@mui/icons-material/Camera';\nimport InfoIcon from '@mui/icons-material/Info';\nimport AddAPhotoIcon from '@mui/icons-material/AddAPhoto';\nimport LoginIcon from '@mui/icons-material/Login';\n\nimport NewProfile from './Newprofile';\nimport Drafts from './Drafts';\nimport Captured from './Captured';\nimport ImageUpload from './ImageUpload';\n\n\nfunction Navbar({ user, username }) {\n  let history = useHistory();\n\n  const [openProfile, setOpenProfile] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [openDrafts, setOpenDrafts] = useState(false);\n  const [openCaptured, setOpenCaptured] = useState(false);\n\n  const toUpload = () => {\n    setOpen(true)\n  }\n\n  const closeUpload = () => {\n    setOpen(false)\n  }\n\n  const handleOpenCaptured = () => {\n    setOpenCaptured(!openCaptured);\n  }\n  const closeCaptured = () => {\n    setOpenCaptured(false);\n    history.go(0);\n  }\n\n  const profileView = () => {\n    if(openProfile) {\n      setOpenProfile(false)\n    } else {\n      setOpenProfile(true)\n    }    \n  }\n\n  const closeProfile = () => {\n    setOpenProfile(false);\n    history.go(0);\n  }\n\n  const draftsView = () => {\n    if(openDrafts) {\n      setOpenDrafts(false)\n    } else {\n      setOpenDrafts(true)\n    }   \n  }\n  const closeDrafts = () => {\n    setOpenDrafts(false);\n    history.go(0);\n  }\n\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\n  const toLogin = () => {\n    history.push('/login')\n  }\n\n  const toAbout = () => {\n    history.push('/about')\n  }\n\n  const toHome = () => {\n    history.push('/')\n  }\n\n  return (\n    <div className='navbar'>\n      <Dialog\n        fullScreen\n        open={openProfile}\n        onClose={() => setOpenProfile(false)}\n        TransitionComponent={Transition}\n        className=\"profile-dialog\"\n      >\n        <center className='profile-nav-heading'>\n\n          <div className=\"profile-nav\">\n            <div className=\"profile-nav-left\">\n              <img\n                className=\"app_header_image\"\n                src=\"LensCleanse.png\"\n                alt=\"Lens Cleanse\"\n                width='80'\n                height='auto'\n              />\n              <h1 className=\"app_header_h1\">{username}</h1>\n            </div>\n\n            <IconButton\n                className=\"x-button\"\n                color=\"inherit\"\n                onClick={closeProfile}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n            </IconButton>\n          </div>\n\n        </center>\n\n        <NewProfile profileusername={username} profileuser={user}></NewProfile>\n\n      </Dialog>\n\n      <Dialog\n        fullScreen\n        open={openCaptured}\n        onClose={handleOpenCaptured}\n        TransitionComponent={Transition}\n        className=\"profile-dialog\"\n      >\n        <center className='profile-nav-heading'>\n\n          <div className=\"profile-nav\">\n            <div className=\"profile-nav-left\">\n              <img\n                className=\"app_header_image\"\n                src=\"LensCleanse.png\"\n                alt=\"Lens Cleanse\"\n                width='80'\n                height='auto'\n              />\n              <h1 className=\"app_header_h1\">My Captured Photos</h1>\n            </div>\n\n            <IconButton\n                className=\"x-button\"\n                color=\"inherit\"\n                onClick={closeCaptured}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n            </IconButton>\n          </div>\n\n        </center>\n\n        <Captured profileusername={username} profileuser={user} ></Captured>\n      </Dialog>\n\n\n      <Dialog \n      open={open} \n      onClose={closeUpload}\n      fullWidth={true}\n      maxWidth={'md'}>\n\n      <DialogTitle> <h1 className=\"app_header_h1\">Lens Cleanse Image Upload </h1> </DialogTitle>\n      <DialogContent>{user?.displayName ? (\n        <ImageUpload username={user.displayName} />\n        ) : (\n        <h3 className=\"upload-login-message\">Login to upload an image...</h3>\n        )}</DialogContent>\n      </Dialog>\n\n      <Dialog\n        fullScreen\n        open={openDrafts}\n        onClose={() => setOpenDrafts(false)}\n        TransitionComponent={Transition}\n        className=\"profile-dialog\"\n      >\n        <center className='profile-nav-heading'>\n\n          <div className=\"profile-nav\">\n            <div className=\"profile-nav-left\">\n              <img\n                className=\"app_header_image\"\n                src=\"LensCleanse.png\"\n                alt=\"Lens Cleanse\"\n                width='80'\n                height='auto'\n              />\n              <h1 className=\"app_header_h1\">My Drafts</h1>\n            </div>\n\n            <IconButton\n                className=\"x-button\"\n                color=\"inherit\"\n                onClick={closeDrafts}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n            </IconButton>\n          </div>\n\n        </center>\n\n        <Drafts user={user} username={username}></Drafts>\n      </Dialog>\n\n      <a onClick={toHome} alt=\"Go to Homepage\">\n        <div className='logo-and-lc'>\n          <img\n            className=\"navbar-logo\"\n            src=\"LensCleanse.png\"\n            alt=\"Lens Cleanse\"\n            width='75'\n            height='auto'\n          />\n          <h1 className='navbar-lc'>LensCleanse</h1>\n        </div>\n      </a>\n\n      <div className='navbar-right'>\n        {/* items aligned to the right of the navbar */}\n\n        {/*<Form className=\"search-bar\">\n          <Button className='search-button' variant=\"outline-success\"><SearchIcon /></Button>\n          <FormControl\n            type=\"search\"\n            placeholder=\"Search\"\n            className=\"search-input\"\n            aria-label=\"Search\"\n          />\n        </Form>*/}\n\n        {user ? (\n          <div className='signed-in'>\n            <Button style={{color: \"#195c79\"}} className=\"tooltip\" onClick={toUpload}><AddAPhotoIcon /><span className=\"tooltiptext\">Image Upload</span></Button>\n            <Button style={{color: \"#195c79\"}} className=\"tooltip\" onClick={draftsView}><CollectionsIcon /><span className=\"tooltiptext\">My Drafts</span></Button>\n            <Button style={{color: \"#195c79\"}} className=\"tooltip-capture\" onClick={handleOpenCaptured}><CameraIcon /><span className=\"tooltiptext-capture\">Captured Images</span></Button>\n            <Button style={{color: \"#195c79\"}} className=\"tooltip\" onClick={toAbout}><InfoIcon /><span className=\"tooltiptext\">About Us</span></Button>\n            <Button style={{color: \"#195c79\"}} className=\"tooltip\" onClick={profileView}><AccountBoxIcon /><span className=\"tooltiptext\">My Profile</span></Button>\n            <Button style={{color: \"#195c79\"}} className=\"tooltip-logout\" onClick={() => signOut(auth)} ><PowerSettingsNewIcon /><span className=\"tooltiptext-logout\">Log Out</span></Button>\n            {/*<AppDrawer user={user} username={username}></AppDrawer>*/}\n          </div>\n        ) : (\n          // sign in sign up buttons\n          <div>\n            <Button style={{color: \"#195c79\"}} className=\"tooltip-signin\" onClick={toLogin}><LoginIcon /><span className=\"tooltiptext-signin\">Sign in / Sign up</span></Button>\n            <Button style={{color: \"#195c79\"}} className=\"tooltip-about\" onClick={toAbout}><InfoIcon /><span className=\"tooltiptext-about\">About Us</span></Button>\n\n          </div>\n        )}\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Photo.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"import React, { useState, useEffect } from 'react';\n\nimport { Dialog, DialogContent, Button, Input } from '@material-ui/core';\nimport TextField from '@mui/material/TextField';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { collection, onSnapshot, doc, addDoc, Timestamp, serverTimestamp, FieldValue, orderBy, query, updateDoc } from 'firebase/firestore';\nimport { collectPosts, auth } from './firebase'\nimport './Photo.css'\n\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport CameraIcon from '@mui/icons-material/Camera';\nimport CameraOutlinedIcon from '@mui/icons-material/CameraOutlined';\nimport AddCommentIcon from '@mui/icons-material/AddComment';\n\n\n  const ExpandMore = styled((props) => {\n    const { expand, ...other } = props;\n    return <IconButton {...other} />;\n  })(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  }));\n\n  const parseDay = (day) => {\n    if(day == 0) {\n      return \"Mon\"\n    }\n    else if(day == 1) {\n      return \"Tue\"\n    }\n    else if(day == 2) {\n      return \"Wed\"\n    }\n    else if(day == 3) {\n      return \"Thu\"\n    }\n    else if(day == 4) {\n      return \"Fri\"\n    }\n    else if(day == 5) {\n      return \"Sat\"\n    }\n    else if(day == 6) {\n      return \"Sun\"\n    }\n    else {\n      return \"\"\n    }\n  }\n\n  const parseMonth = (month) => {\n    if(month == 0) {\n      return \"January\"\n    }\n    else if(month == 1) {\n      return \"Febuary\"\n    }\n    else if(month == 2) {\n      return \"March\"\n    }\n    else if(month == 3) {\n      return \"April\"\n    }\n    else if(month == 4) {\n      return \"May\"\n    }\n    else if(month == 5) {\n      return \"June\"\n    }\n    else if(month == 6) {\n      return \"July\"\n    }\n    else if(month == 7) {\n        return \"August\"\n    }\n    else if(month == 8) {\n        return \"September\"\n    }\n    else if(month == 9) {\n        return \"October\"\n    }\n    else if(month == 10) {\n        return \"November\"\n    }\n    else if(month == 11) {\n        return \"December\"\n    }\n    else {\n      return \"\"\n    }\n  }\n\n  const parseTime = (timeArray) => {\n    if(!timeArray) {return \"No Time Stamp on Post\"}\n\n    const post_day = timeArray[0]\n    const post_date = timeArray[1]\n    const post_month = timeArray[2]\n    const post_year = timeArray[3]\n    const post_hour = timeArray[4]\n    const post_minute = timeArray[5]\n\n    let result = parseDay(post_day) + \", \";\n    result += parseMonth(post_month)\n    result += \" \"\n    result += post_date\n    result += \", \"\n    result += post_year\n    result += \" at \"\n    result += post_hour\n    result += \":\"\n    if (post_minute < 10) {\n      result += \"0\"\n    }\n    result += post_minute\n    return result\n}\n\nconst removeElement= (capList, item) => {\n  const array = capList\n  const index = array.indexOf(item);\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n  return array\n}\n\nfunction Photo({ postId, username, user, caption, imageUrl, iso, cameraType, fStop, shutterSpeed, other,\n    captures, focalLength,lensType, lighting, location, numComments, timePosted}) {\n\n    const [expanded, setExpanded] = useState(false); \n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    const [openComment, setOpenComment] = useState(false);\n    const [openViewComments, setOpenViewComments] = useState(false);\n    const [openCommentPosted, setOpenCommentPosted] = useState(false);\n\n    const handleCloseCommentPosted = () => {\n        setOpenCommentPosted(!openCommentPosted)\n    }\n\n    const handleClickOpen = () => {\n      setOpenComment(true);\n    };\n  \n    const handleClose = () => {\n      setOpenComment(false);\n    };\n\n    const handleViewComments = () => {\n        setOpenViewComments(!openViewComments);\n    }\n\n    useEffect(() => {\n        let unsubscribe;\n        if (postId) {\n          unsubscribe = onSnapshot(query(collection(doc(collectPosts, postId), 'comments'), orderBy('timestamp', 'desc')), (snapshot) => {\n            setComments(snapshot.docs.map((doc) => doc.data()));\n          });\n        }\n        return () => {\n          unsubscribe();\n        };\n      }, [postId])\n\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    const postComment = (event) => {\n        event.preventDefault();\n        addDoc(collection(doc(collectPosts, postId), 'comments'), {\n          text: comment,\n          username: user.displayName,\n          timestamp: serverTimestamp(FieldValue)\n        });\n        const current_post = doc(collectPosts, postId);\n        updateDoc(current_post, {\n          numComments: numComments+1\n        });\n        setComment('');\n        handleClose();\n        handleCloseCommentPosted();\n\n      }\n\n      const addCapture = (event) => {\n        event.preventDefault();\n        const current_post = doc(collectPosts, postId)\n        updateDoc(current_post, {\n          captures: [...captures, user.displayName]\n        });\n      }\n\n      const removeCapture = (event) => {\n        event.preventDefault();\n        const current_post = doc(collectPosts, postId)\n        updateDoc(current_post, {\n          captures: removeElement(captures, user.displayName)\n        });\n      }\n\n    const descriptionElementRef = React.useRef(null);\n    useEffect(() => {\n      if (openViewComments) {\n        const { current: descriptionElement } = descriptionElementRef;\n        if (descriptionElement !== null) {\n          descriptionElement.focus();\n        }\n      }\n    }, [openViewComments]);\n\n    return (\n        <div className=\"wrapper\">\n\n            <Dialog\n                open={openCommentPosted}\n                onClose={handleCloseCommentPosted}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                {\"Congrats!\"}\n                </DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Your comment has been successfully uploaded under {username}'s \"{caption}\" post.\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseCommentPosted}>OK</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                sx={{ width: 400 }}\n                open={openViewComments}\n                onClose={handleViewComments}\n                scroll={'body'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Comments on {username}'s \"{caption}\" post</DialogTitle>\n                <DialogContentText\n                    id=\"scroll-dialog-description\"\n                    ref={descriptionElementRef}\n                    tabIndex={-1}\n                >\n                    <div className='post_comments'>\n                        {comments.map((comment) => (\n                        <h4 className='a_comment'> <strong>{comment.username}</strong> {comment.text} </h4>\n                        ))}\n                    </div>\n                </DialogContentText>\n                <DialogActions>\n                <Button onClick={handleViewComments}>Close</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog className=\"photo-comment-dialog\" open={openComment} onClose={handleClose}>\n                <DialogTitle>Add a Comment on {username}'s \"{caption}\" post! </DialogTitle>\n                <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Comment\"\n                    type=\"email\"\n                    fullWidth\n                    variant=\"standard\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                />\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button disabled={!comment || !user} onClick={postComment}>Comment</Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <Card sx={{ maxWidth: 400 }}>\n                <CardHeader\n                    title={caption}\n                    subheader={parseTime(timePosted)}\n                />\n                <CardMedia\n                    component=\"img\"\n                    height=\"220\"\n                    image={imageUrl}\n                    alt=\"Paella dish\"\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        <p>{captures.length} captures</p>\n                        <a onClick={handleViewComments}>View all {numComments} comments</a>\n                    </Typography>\n                </CardContent>\n                <CardActions className=\"buttons\" disableSpacing>\n                  <div>\n                    {\n                    user && captures.find(capturedNames => capturedNames === user.displayName)\n                      ?\n                      <IconButton className=\"likeandcomment\" onClick={removeCapture} disabled={user == null}><CameraOutlinedIcon /></IconButton>\n                      :\n                      <IconButton className=\"likeandcomment\" onClick={addCapture} disabled={user == null}><CameraIcon /></IconButton>\n                    }\n                    <IconButton disabled={!user} onClick={handleClickOpen} aria-label=\"share\">\n                        <AddCommentIcon />\n                    </IconButton>\n\n                  </div>\n                    <ExpandMore\n                        expand={expanded}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                        >\n                        <ExpandMoreIcon />\n                    </ExpandMore>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                    <Typography paragraph>Details:</Typography>\n                    <Typography paragraph>\n                            <p className='info1'> <strong>Camera: </strong> {cameraType} </p>\n                            <p className='info2'> <strong> Lens Type: </strong>  {lensType} </p>\n                            <p className='info3'> <strong> ISO: </strong>  {iso} </p>\n                            <p className='info4'> <strong> f-Stop: </strong>  {fStop} </p>\n                            <p className='info5'> <strong> Shutter Speed: </strong>  {shutterSpeed} s </p>\n                            <p className='info6'> <strong> Focal Length: </strong>  {focalLength} mm</p>\n                            <p className='info7'> <strong> Lighting: </strong>  {lighting} </p>\n                            <p className='info8'> <strong> Location: </strong>  {location} </p>\n                            <p className='info9'> <strong> Other Info: </strong>  {other} </p>\n                    </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n\n        </div>\n    )\n}\n\nexport default Photo","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Drafts.js",["158","159","160","161"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport { onSnapshot, orderBy, query, Timestamp, where } from 'firebase/firestore';\nimport { storage, collectDrafts } from './firebase';\n\nimport DraftPhoto from './DraftPhoto';\n\nfunction Drafts({ user, username }) {\n  const [drafts, setDrafts] = useState([]);\n\n  useEffect(() => {\n    onSnapshot(query(collectDrafts, where('username', \"==\", username)), (snapshot) => {\n      // when posts changes this code runs\n      console.log(\"Snapshot\", snapshot.docs)\n      setDrafts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        draft: doc.data()\n      })));\n\n    })\n  }, []);\n\n  return (\n    <div>\n        <Grid className=\"profile-posts-container\" container spacing={0.5}>\n          {\n            drafts.map(({ id, draft }) => (\n              <Grid className=\"profile-posts\" >\n                <DraftPhoto\n                  className=\"profile-post\"\n                  key={id}\n                  postId={id}\n                  user={user}\n                  username={draft.username}\n                  caption={draft.caption}\n                  imageUrl={draft.imageUrl}\n                  iso={draft.ISO}\n                  cameraType={draft.cameraType}\n                  fStop={draft.fStop}\n                  shutterSpeed={draft.shutterSpeed}\n                  focalLength={draft.focalLength}\n                  lensType={draft.lensType}\n                  lighting={draft.lighting}\n                  location={draft.location}\n                  other={draft.other}\n                />\n              </Grid>\n            ))\n          }\n        </Grid>\n    </div>\n  )\n}\n\n\n\nexport default Drafts\n","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/DraftPhoto.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Captured.js",["182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { onSnapshot, orderBy, query, Timestamp, where } from 'firebase/firestore';\nimport { collectPosts, auth } from './firebase'\n\nimport './Newprofile.css';\n\nimport Post from './Post';\n\nconst splitTime = (date) => {\n  if(!date) { return [] }\n  date = date.toDate()\n  const date_elements = [date.getDay(), date.getDate(), date.getMonth(), date.getFullYear(), date.getHours(), date.getMinutes()]\n  return date_elements\n}\n\nconst containsCapture = (capList, capName) => {\n    for(let i = 0; i < capList.length; i++) {\n        if(capList[i] == capName) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction Captured({ profileusername, profileuser }) {\n  const [username, setUsername] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n\n\n  useEffect(() => {\n    onSnapshot(query(collectPosts), (snapshot) => {\n      // when posts changes this code runs\n      console.log(\"Snapshot\", snapshot.docs)\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n\n    })\n  }, []);\n\n\n  //! Replace p tags with information from Firebase\n  return (\n\n      <div className=\"profile-wrapper\">\n\n          {posts.map(({ id, post }) => (\n            <div>\n                {profileuser && post.captures.find(capturedNames => capturedNames === profileuser.displayName) ?\n                <Post\n                className=\"captured-post\"\n                key={id}\n                postId={id}\n                user={profileuser}\n                username={post.username}\n                caption={post.caption}\n                imageUrl={post.imageUrl}\n                iso={post.ISO}\n                cameraType={post.cameraType}\n                fStop={post.fStop}\n                shutterSpeed={post.shutterSpeed}\n                captures={post.captures}\n                focalLength={post.focalLength}\n                lensType={post.lensType}\n                lighting={post.lighting}\n                location={post.location}\n                other={post.other}\n                numComments={post.numComments}\n                timePosted={null}\n              />            :\n            <div></div>}\n\n            </div>))}     \n      \n      </div>\n\n  )\n}\n\nexport default Captured",{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":21,"column":20,"nodeType":"204","messageId":"205","endLine":21,"endColumn":31},{"ruleId":"202","severity":1,"message":"206","line":116,"column":7,"nodeType":"204","messageId":"205","endLine":116,"endColumn":16},{"ruleId":"202","severity":1,"message":"207","line":6,"column":28,"nodeType":"204","messageId":"205","endLine":6,"endColumn":42},{"ruleId":"202","severity":1,"message":"208","line":6,"column":52,"nodeType":"204","messageId":"205","endLine":6,"endColumn":62},{"ruleId":"202","severity":1,"message":"209","line":6,"column":64,"nodeType":"204","messageId":"205","endLine":6,"endColumn":69},{"ruleId":"202","severity":1,"message":"210","line":6,"column":71,"nodeType":"204","messageId":"205","endLine":6,"endColumn":81},{"ruleId":"202","severity":1,"message":"211","line":35,"column":9,"nodeType":"204","messageId":"205","endLine":35,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":19,"column":22,"nodeType":"204","messageId":"205","endLine":19,"endColumn":33},{"ruleId":"202","severity":1,"message":"212","line":20,"column":22,"nodeType":"204","messageId":"205","endLine":20,"endColumn":33},{"ruleId":"202","severity":1,"message":"213","line":21,"column":19,"nodeType":"204","messageId":"205","endLine":21,"endColumn":27},{"ruleId":"202","severity":1,"message":"214","line":64,"column":11,"nodeType":"204","messageId":"205","endLine":64,"endColumn":17},{"ruleId":"202","severity":1,"message":"215","line":2,"column":77,"nodeType":"204","messageId":"205","endLine":2,"endColumn":103},{"ruleId":"202","severity":1,"message":"216","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":16},{"ruleId":"202","severity":1,"message":"217","line":6,"column":18,"nodeType":"204","messageId":"205","endLine":6,"endColumn":23},{"ruleId":"202","severity":1,"message":"203","line":13,"column":20,"nodeType":"204","messageId":"205","endLine":13,"endColumn":31},{"ruleId":"218","severity":1,"message":"219","line":121,"column":5,"nodeType":"220","messageId":"221","endLine":121,"endColumn":12},{"ruleId":"202","severity":1,"message":"222","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":28},{"ruleId":"202","severity":1,"message":"223","line":3,"column":30,"nodeType":"204","messageId":"205","endLine":3,"endColumn":43},{"ruleId":"202","severity":1,"message":"224","line":4,"column":22,"nodeType":"204","messageId":"205","endLine":4,"endColumn":29},{"ruleId":"202","severity":1,"message":"225","line":4,"column":38,"nodeType":"204","messageId":"205","endLine":4,"endColumn":47},{"ruleId":"202","severity":1,"message":"226","line":5,"column":24,"nodeType":"204","messageId":"205","endLine":5,"endColumn":28},{"ruleId":"202","severity":1,"message":"227","line":17,"column":10,"nodeType":"204","messageId":"205","endLine":17,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":17,"column":20,"nodeType":"204","messageId":"205","endLine":17,"endColumn":31},{"ruleId":"202","severity":1,"message":"228","line":18,"column":10,"nodeType":"204","messageId":"205","endLine":18,"endColumn":19},{"ruleId":"202","severity":1,"message":"229","line":18,"column":21,"nodeType":"204","messageId":"205","endLine":18,"endColumn":33},{"ruleId":"202","severity":1,"message":"230","line":19,"column":10,"nodeType":"204","messageId":"205","endLine":19,"endColumn":14},{"ruleId":"202","severity":1,"message":"231","line":19,"column":16,"nodeType":"204","messageId":"205","endLine":19,"endColumn":23},{"ruleId":"232","severity":1,"message":"233","line":33,"column":6,"nodeType":"234","endLine":33,"endColumn":8,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":37,"column":25,"nodeType":"238","messageId":"221","endLine":37,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":63,"column":22,"nodeType":"238","messageId":"221","endLine":63,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":32,"column":10,"nodeType":"238","messageId":"221","endLine":32,"endColumn":12},{"ruleId":"236","severity":1,"message":"237","line":35,"column":15,"nodeType":"238","messageId":"221","endLine":35,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":38,"column":15,"nodeType":"238","messageId":"221","endLine":38,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":41,"column":15,"nodeType":"238","messageId":"221","endLine":41,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":44,"column":15,"nodeType":"238","messageId":"221","endLine":44,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":47,"column":15,"nodeType":"238","messageId":"221","endLine":47,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":50,"column":15,"nodeType":"238","messageId":"221","endLine":50,"endColumn":17},{"ruleId":"202","severity":1,"message":"239","line":64,"column":11,"nodeType":"204","messageId":"205","endLine":64,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":77,"column":25,"nodeType":"238","messageId":"221","endLine":77,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":87,"column":40,"nodeType":"238","messageId":"221","endLine":87,"endColumn":42},{"ruleId":"236","severity":1,"message":"237","line":97,"column":42,"nodeType":"238","messageId":"221","endLine":97,"endColumn":44},{"ruleId":"236","severity":1,"message":"237","line":107,"column":42,"nodeType":"238","messageId":"221","endLine":107,"endColumn":44},{"ruleId":"202","severity":1,"message":"240","line":173,"column":10,"nodeType":"204","messageId":"205","endLine":173,"endColumn":22},{"ruleId":"202","severity":1,"message":"241","line":173,"column":24,"nodeType":"204","messageId":"205","endLine":173,"endColumn":39},{"ruleId":"236","severity":1,"message":"242","line":232,"column":30,"nodeType":"238","messageId":"221","endLine":232,"endColumn":32},{"ruleId":"232","severity":1,"message":"243","line":238,"column":6,"nodeType":"234","endLine":238,"endColumn":8,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":505,"column":11,"nodeType":"247","endLine":505,"endColumn":63},{"ruleId":"202","severity":1,"message":"248","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"249","line":6,"column":16,"nodeType":"204","messageId":"205","endLine":6,"endColumn":27},{"ruleId":"202","severity":1,"message":"250","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":18},{"ruleId":"202","severity":1,"message":"251","line":14,"column":8,"nodeType":"204","messageId":"205","endLine":14,"endColumn":25},{"ruleId":"202","severity":1,"message":"252","line":22,"column":8,"nodeType":"204","messageId":"205","endLine":22,"endColumn":23},{"ruleId":"245","severity":1,"message":"246","line":225,"column":7,"nodeType":"247","endLine":225,"endColumn":48},{"ruleId":"202","severity":1,"message":"217","line":3,"column":41,"nodeType":"204","messageId":"205","endLine":3,"endColumn":46},{"ruleId":"202","severity":1,"message":"222","line":9,"column":10,"nodeType":"204","messageId":"205","endLine":9,"endColumn":28},{"ruleId":"202","severity":1,"message":"223","line":9,"column":30,"nodeType":"204","messageId":"205","endLine":9,"endColumn":43},{"ruleId":"202","severity":1,"message":"225","line":10,"column":47,"nodeType":"204","messageId":"205","endLine":10,"endColumn":56},{"ruleId":"202","severity":1,"message":"226","line":11,"column":24,"nodeType":"204","messageId":"205","endLine":11,"endColumn":28},{"ruleId":"202","severity":1,"message":"253","line":24,"column":8,"nodeType":"204","messageId":"205","endLine":24,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":42,"column":12,"nodeType":"238","messageId":"221","endLine":42,"endColumn":14},{"ruleId":"236","severity":1,"message":"237","line":45,"column":17,"nodeType":"238","messageId":"221","endLine":45,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":48,"column":17,"nodeType":"238","messageId":"221","endLine":48,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":51,"column":17,"nodeType":"238","messageId":"221","endLine":51,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":54,"column":17,"nodeType":"238","messageId":"221","endLine":54,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":57,"column":17,"nodeType":"238","messageId":"221","endLine":57,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":60,"column":17,"nodeType":"238","messageId":"221","endLine":60,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":69,"column":14,"nodeType":"238","messageId":"221","endLine":69,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":72,"column":19,"nodeType":"238","messageId":"221","endLine":72,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":75,"column":19,"nodeType":"238","messageId":"221","endLine":75,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":78,"column":19,"nodeType":"238","messageId":"221","endLine":78,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":81,"column":19,"nodeType":"238","messageId":"221","endLine":81,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":84,"column":19,"nodeType":"238","messageId":"221","endLine":84,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":87,"column":19,"nodeType":"238","messageId":"221","endLine":87,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":90,"column":19,"nodeType":"238","messageId":"221","endLine":90,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":93,"column":19,"nodeType":"238","messageId":"221","endLine":93,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":96,"column":19,"nodeType":"238","messageId":"221","endLine":96,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":99,"column":19,"nodeType":"238","messageId":"221","endLine":99,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":102,"column":19,"nodeType":"238","messageId":"221","endLine":102,"endColumn":21},{"ruleId":"245","severity":1,"message":"246","line":315,"column":25,"nodeType":"247","endLine":315,"endColumn":57},{"ruleId":"202","severity":1,"message":"224","line":3,"column":22,"nodeType":"204","messageId":"205","endLine":3,"endColumn":29},{"ruleId":"202","severity":1,"message":"225","line":3,"column":38,"nodeType":"204","messageId":"205","endLine":3,"endColumn":47},{"ruleId":"202","severity":1,"message":"254","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":17},{"ruleId":"232","severity":1,"message":"255","line":21,"column":6,"nodeType":"234","endLine":21,"endColumn":8,"suggestions":"256"},{"ruleId":"202","severity":1,"message":"257","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"217","line":3,"column":41,"nodeType":"204","messageId":"205","endLine":3,"endColumn":46},{"ruleId":"202","severity":1,"message":"251","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":25},{"ruleId":"202","severity":1,"message":"258","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":19},{"ruleId":"202","severity":1,"message":"222","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":28},{"ruleId":"202","severity":1,"message":"223","line":11,"column":30,"nodeType":"204","messageId":"205","endLine":11,"endColumn":43},{"ruleId":"202","severity":1,"message":"259","line":12,"column":10,"nodeType":"204","messageId":"205","endLine":12,"endColumn":20},{"ruleId":"202","severity":1,"message":"260","line":12,"column":22,"nodeType":"204","messageId":"205","endLine":12,"endColumn":32},{"ruleId":"202","severity":1,"message":"225","line":12,"column":47,"nodeType":"204","messageId":"205","endLine":12,"endColumn":56},{"ruleId":"202","severity":1,"message":"224","line":12,"column":87,"nodeType":"204","messageId":"205","endLine":12,"endColumn":94},{"ruleId":"202","severity":1,"message":"261","line":12,"column":96,"nodeType":"204","messageId":"205","endLine":12,"endColumn":101},{"ruleId":"202","severity":1,"message":"226","line":13,"column":24,"nodeType":"204","messageId":"205","endLine":13,"endColumn":28},{"ruleId":"202","severity":1,"message":"262","line":19,"column":8,"nodeType":"204","messageId":"205","endLine":19,"endColumn":18},{"ruleId":"202","severity":1,"message":"253","line":27,"column":8,"nodeType":"204","messageId":"205","endLine":27,"endColumn":20},{"ruleId":"202","severity":1,"message":"263","line":28,"column":8,"nodeType":"204","messageId":"205","endLine":28,"endColumn":18},{"ruleId":"202","severity":1,"message":"264","line":29,"column":8,"nodeType":"204","messageId":"205","endLine":29,"endColumn":26},{"ruleId":"202","severity":1,"message":"265","line":30,"column":8,"nodeType":"204","messageId":"205","endLine":30,"endColumn":22},{"ruleId":"202","severity":1,"message":"266","line":93,"column":13,"nodeType":"204","messageId":"205","endLine":93,"endColumn":25},{"ruleId":"202","severity":1,"message":"266","line":121,"column":13,"nodeType":"204","messageId":"205","endLine":121,"endColumn":25},{"ruleId":"202","severity":1,"message":"267","line":125,"column":11,"nodeType":"204","messageId":"205","endLine":125,"endColumn":32},{"ruleId":"202","severity":1,"message":"268","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":12},{"ruleId":"202","severity":1,"message":"222","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":28},{"ruleId":"202","severity":1,"message":"223","line":3,"column":30,"nodeType":"204","messageId":"205","endLine":3,"endColumn":43},{"ruleId":"202","severity":1,"message":"224","line":4,"column":22,"nodeType":"204","messageId":"205","endLine":4,"endColumn":29},{"ruleId":"202","severity":1,"message":"225","line":4,"column":38,"nodeType":"204","messageId":"205","endLine":4,"endColumn":47},{"ruleId":"202","severity":1,"message":"269","line":4,"column":49,"nodeType":"204","messageId":"205","endLine":4,"endColumn":54},{"ruleId":"202","severity":1,"message":"226","line":5,"column":24,"nodeType":"204","messageId":"205","endLine":5,"endColumn":28},{"ruleId":"202","severity":1,"message":"270","line":11,"column":7,"nodeType":"204","messageId":"205","endLine":11,"endColumn":16},{"ruleId":"202","severity":1,"message":"271","line":18,"column":7,"nodeType":"204","messageId":"205","endLine":18,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":20,"column":23,"nodeType":"238","messageId":"221","endLine":20,"endColumn":25},{"ruleId":"202","severity":1,"message":"227","line":28,"column":10,"nodeType":"204","messageId":"205","endLine":28,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":28,"column":20,"nodeType":"204","messageId":"205","endLine":28,"endColumn":31},{"ruleId":"202","severity":1,"message":"228","line":29,"column":10,"nodeType":"204","messageId":"205","endLine":29,"endColumn":19},{"ruleId":"202","severity":1,"message":"229","line":29,"column":21,"nodeType":"204","messageId":"205","endLine":29,"endColumn":33},{"ruleId":"202","severity":1,"message":"230","line":30,"column":10,"nodeType":"204","messageId":"205","endLine":30,"endColumn":14},{"ruleId":"202","severity":1,"message":"231","line":30,"column":16,"nodeType":"204","messageId":"205","endLine":30,"endColumn":23},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'setUsername' is assigned a value but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'LinearProgress' is defined but never used.","'IconButton' is defined but never used.","'Modal' is defined but never used.","'makeStyles' is defined but never used.","'fileInput' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'signUp' is assigned a value but never used.","'signInWithEmailAndPassword' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","'onAuthStateChanged' is defined but never used.","'updateProfile' is defined but never used.","'orderBy' is defined but never used.","'Timestamp' is defined but never used.","'auth' is defined but never used.","'username' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'setUserEmail' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profileusername'. Either include it or remove the dependency array.","ArrayExpression",["274"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'miliSecs' is assigned a value but never used.","'userCaptured' is assigned a value but never used.","'setUserCaptured' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'user' and 'username'. Either include them or remove the dependency array.",["275"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","'FormControl' is defined but never used.","'SearchIcon' is defined but never used.","'DialogContentText' is defined but never used.","'InsertPhotoIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'storage' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["276"],"'useEffect' is defined but never used.","'ImageUpload' is defined but never used.","'collection' is defined but never used.","'onSnapshot' is defined but never used.","'query' is defined but never used.","'CardHeader' is defined but never used.","'CameraIcon' is defined but never used.","'CameraOutlinedIcon' is defined but never used.","'AddCommentIcon' is defined but never used.","'current_post' is assigned a value but never used.","'descriptionElementRef' is assigned a value but never used.","'Grid' is defined but never used.","'where' is defined but never used.","'splitTime' is assigned a value but never used.","'containsCapture' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [profileusername]",{"range":"283","text":"284"},"Update the dependencies array to be: [user, username]",{"range":"285","text":"286"},"Update the dependencies array to be: [username]",{"range":"287","text":"288"},[1134,1136],"[profileusername]",[6550,6552],"[user, username]",[662,664],"[username]"]