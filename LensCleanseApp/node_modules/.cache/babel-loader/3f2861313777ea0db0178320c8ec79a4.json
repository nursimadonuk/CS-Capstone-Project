{"ast":null,"code":"var _jsxFileName = \"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { storage, collectPosts } from './firebase';\nimport { ref, getDownloadURL } from 'firebase/storage';\nimport { serverTimestamp, FieldValue } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUpload() {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState('');\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = ref(storage, `images/${image.name}`).put(image); // const imag = ref(storage, `images/${image.name}`);\n    // const uploadTask = put(imag);\n\n    uploadTask.on(\"state_changed\", snapshot => {\n      // progress function\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // complete function\n      getDownloadURL(ref(storage, \"images\").child(image.name)).then(url => {\n        collectPosts.add({\n          timestamp: serverTimestamp(FieldValue),\n          caption: caption,\n          imageUrl: url,\n          username: username\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a caption...\",\n      onChange: event => setCaption(event.target.value),\n      value: caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageUpload, \"p3zKEhTksCtzzlDkTmn7vuh4veI=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js"],"names":["Button","React","useState","storage","collectPosts","ref","getDownloadURL","serverTimestamp","FieldValue","ImageUpload","image","setImage","progress","setProgress","caption","setCaption","handleChange","e","target","files","handleUpload","uploadTask","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","then","url","add","timestamp","imageUrl","username","event","value"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,YAAtC;AACA,SAASC,GAAT,EAAcC,cAAd,QAAoC,kBAApC;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,oBAA5C;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACnBR,MAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR;AACH;AACJ,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMC,UAAU,GAAGhB,GAAG,CAACF,OAAD,EAAW,UAASO,KAAK,CAACY,IAAK,EAA/B,CAAH,CAAqCC,GAArC,CAAyCb,KAAzC,CAAnB,CADuB,CAGvB;AACA;;AAEAW,IAAAA,UAAU,CAACG,EAAX,CACI,eADJ,EAEKC,QAAD,IAAc;AACV;AACA,YAAMb,QAAQ,GAAGc,IAAI,CAACC,KAAL,CACZF,QAAQ,CAACG,gBAAT,GAA4BH,QAAQ,CAACI,UAAtC,GAAoD,GADvC,CAAjB;AAGAhB,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KARL,EASKkB,KAAD,IAAW;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,MAAAA,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL;AACH,KAZL,EAaI,MAAM;AACF;AACA5B,MAAAA,cAAc,CAACD,GAAG,CAACF,OAAD,EAAU,QAAV,CAAH,CAAuBgC,KAAvB,CAA6BzB,KAAK,CAACY,IAAnC,CAAD,CAAd,CACCc,IADD,CACMC,GAAG,IAAI;AACTjC,QAAAA,YAAY,CAACkC,GAAb,CAAiB;AACbC,UAAAA,SAAS,EAAEhC,eAAe,CAACC,UAAD,CADb;AAEbM,UAAAA,OAAO,EAAEA,OAFI;AAGb0B,UAAAA,QAAQ,EAAEH,GAHG;AAIbI,UAAAA,QAAQ,EAAEA;AAJG,SAAjB;AAMH,OARD;AASH,KAxBL;AA0BH,GAhCD;;AAkCA,sBACI;AAAA,4BAOI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,oBAA/B;AAAoD,MAAA,QAAQ,EAAEC,KAAK,IAAI3B,UAAU,CAAC2B,KAAK,CAACxB,MAAN,CAAayB,KAAd,CAAjF;AAAuG,MAAA,KAAK,EAAE7B;AAA9G;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA7DQX,W;;KAAAA,W;AA+DT,eAAeA,WAAf","sourcesContent":["import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { storage, collectPosts } from './firebase';\nimport { ref, getDownloadURL } from 'firebase/storage';\nimport { serverTimestamp, FieldValue } from 'firebase/firestore';\n\nfunction ImageUpload() {\n    const [image, setImage] = useState(null);\n    const [progress, setProgress] = useState(0);\n    const [caption, setCaption] = useState('');\n\n    const handleChange = (e) => {\n        if (e.target.files[0]) {\n            setImage(e.target.files[0]);\n        }\n    };\n\n    const handleUpload = () => {\n        const uploadTask = ref(storage, `images/${image.name}`).put(image);\n\n        // const imag = ref(storage, `images/${image.name}`);\n        // const uploadTask = put(imag);\n\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                // progress function\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progress);\n            },\n            (error) => {\n                console.log(error);\n                alert(error.message);\n            },\n            () => {\n                // complete function\n                getDownloadURL(ref(storage, \"images\").child(image.name))\n                .then(url => {\n                    collectPosts.add({\n                        timestamp: serverTimestamp(FieldValue),\n                        caption: caption,\n                        imageUrl: url,\n                        username: username\n                    })\n                })\n            }\n        )\n    };\n\n    return (\n        <div>\n            \n            {/*What to have*/}\n            {/*Caption input*/}\n            {/*File picker*/}\n            {/*post*/}\n\n            <input type=\"text\" placeholder=\"Enter a caption...\" onChange={event => setCaption(event.target.value)} value={caption}/>\n            <input type=\"file\" onChange={handleChange}/>\n            <Button onClick={handleUpload}>\n                Upload\n            </Button>\n\n        </div>\n    )\n}\n\nexport default ImageUpload\n"]},"metadata":{},"sourceType":"module"}