[{"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/index.js":"1","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/App.js":"2","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/reportWebVitals.js":"3","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js":"4","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/firebase.js":"5","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Post.js":"6","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/components/AppDrawer.jsx":"7","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Login.js":"8","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Profile.js":"9","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Navbar.js":"10","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Settings.js":"11","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signup.js":"12","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/About.js":"13","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signin.js":"14"},{"size":1066,"mtime":1635100144183,"results":"15","hashOfConfig":"16"},{"size":3289,"mtime":1635079370753,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1632176691883,"results":"18","hashOfConfig":"16"},{"size":6033,"mtime":1635079139228,"results":"19","hashOfConfig":"16"},{"size":867,"mtime":1632176691882,"results":"20","hashOfConfig":"16"},{"size":4219,"mtime":1635104290426,"results":"21","hashOfConfig":"16"},{"size":5430,"mtime":1635118139750,"results":"22","hashOfConfig":"16"},{"size":3410,"mtime":1634167882741,"results":"23","hashOfConfig":"16"},{"size":4541,"mtime":1634523356802,"results":"24","hashOfConfig":"16"},{"size":2342,"mtime":1635117276635,"results":"25","hashOfConfig":"16"},{"size":142,"mtime":1634168045687,"results":"26","hashOfConfig":"16"},{"size":3763,"mtime":1635100757658,"results":"27","hashOfConfig":"16"},{"size":208,"mtime":1634498926143,"results":"28","hashOfConfig":"16"},{"size":4862,"mtime":1635100065800,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1qmw8h0",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"33"},"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/index.js",["67","68"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './Login'\nimport Profile from './Profile'\nimport Settings from './Settings'\nimport ImageUpload from './ImageUpload';\nimport About from './About';\nimport Signup from './Signup'\nimport Signin from './Signin';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component = {App}/>\n        <Route path=\"/login\" component={Signin} />\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/imageupload\">\n            <ImageUpload />\n        </Route>\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/about\" component={About} />\n        <Route default component={App} />\n      </Switch>\n      \n    </div>\n  </Router>\n\n  ,\n\n  document.getElementById('root')\n);\n\nreportWebVitals();\n",["69","70"],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/App.js",["71","72","73","74","75","76","77","78","79","80","81","82"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { collectPosts, auth } from './firebase'\nimport { onSnapshot, orderBy, query, Timestamp } from 'firebase/firestore';\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { Button, Input, makeStyles, Modal } from '@material-ui/core';\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport ImageUpload from './ImageUpload';\nimport Navbar from './Navbar';\nimport { popoverClasses } from '@mui/material';\n\nfunction App() {\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n      if (authUser) {\n        // user logged in\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          // do not update username\n        } else {\n          // NEW USER\n          return updateProfile(authUser, {\n            displayName: username,\n          });\n        }\n\n      } else {\n        // user logged out\n        setUser(null);\n      }\n    })\n    return () => {\n      // some cleanup action\n      unsubscribe();\n    }\n  }, [user, username]);\n\n  // runs piece of code on specific condition\n  useEffect(() => {\n    onSnapshot(query(collectPosts, orderBy('timestamp', 'desc')), (snapshot) => {\n      // when posts changes this code runs\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n\n    })\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"app\">\n\n        {user?.displayName ? (\n          <Navbar user={user} username={user.displayName} ></Navbar>\n        ) : (\n          <Navbar></Navbar>\n        )}  \n\n        <br></br>  \n        <br></br>    \n\n        {/*user?.displayName ? (           \n          <ImageUpload username={user.displayName} />\n\n        ) : (\n          <h3 className=\"upload-login-message\">Login to upload an image...</h3>\n        )*/}\n\n        {\n          posts.map(({ id, post }) => (\n            <div className=\"posts\" >\n              <Post key={id} postId={id} user={user} username={post.username} caption={post.caption} imageUrl={post.imageUrl} iso={post.ISO} cameraType={post.cameraType} exposure={post.exposure} fStop={post.fStop} shutterSpeed={post.shutterSpeed} specifyFocus={post.specifyFocus} verticalTilt={post.verticalTilt} zoomFactor={post.zoomFactor} captures={post.captures}/>\n            </div>\n          ))\n        }\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blue[500],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: red[500],\n    },\n  },\n});\n\nexport default App;\n","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/reportWebVitals.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js",["83","84","85"],"// import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { storage, collectPosts } from './firebase';\nimport { ref, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\nimport { serverTimestamp, FieldValue, addDoc } from 'firebase/firestore';\nimport { TextField, Input, LinearProgress, Button, IconButton } from \"@material-ui/core\"\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport \"./Post.css\"\nimport \"./ImageUpload.css\"\n\nfunction ImageUpload({ username }) {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState('');\n  const [cameraType, setCameraType] = useState('');\n  const [ISO, setISO] = useState(0);\n  const [exposure, setExposure] = useState('');\n  const [fStop, setFStop] = useState(0);\n  const [shutterSpeed, setShutterSpeed] = useState(0);\n  const [specifyFocus, setSpecifyFocus] = useState(\"\");\n  const [verticalTilt, setVerticalTilt] = useState(0);\n  const [zoomFactor, setZoomFactor] = useState(0);\n  const [other, setOther] = useState(\"\");\n\n\n  const fileInput = React.createRef()\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n\n    if (!image || !caption) {\n      alert('PLEASE MAKE SURE YOU ENTERED BOTH IMAGE AND CAPTION')\n    }\n    else {\n\n      const uploadTask = uploadBytesResumable(ref(storage, `images/${image.name}`), image);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          // progress function\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n          alert(error.message);\n        },\n        () => {\n\n          getDownloadURL(ref(storage, `images/${image.name}`))\n            .then(url => {\n              addDoc(collectPosts, {\n                timestamp: serverTimestamp(FieldValue),\n                caption: caption,\n                imageUrl: url,\n                username: username,\n                captures: 0,\n                ISO: ISO,\n                cameraType: cameraType,\n                exposure: exposure,\n                fStop: fStop,\n                shutterSpeed: shutterSpeed,\n                specifyFocus: specifyFocus,\n                verticalTilt: verticalTilt,\n                zoomFactor: zoomFactor,\n                other: other\n\n              });\n\n              setProgress(0);\n              setCaption(\"\");\n              setImage(null);\n              setCameraType(\"\");\n              setISO(0);\n              setExposure(\"\");\n              setFStop(0);\n              setShutterSpeed(0);\n              setSpecifyFocus(\"\");\n              setVerticalTilt(0);\n              setZoomFactor(0);\n              setOther(\"\");\n\n            })\n\n        }\n\n      )\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme} className=\"imageupload\">\n      <div>\n\n        <progress className=\"imageupload_progress\" value={progress} max=\"100\" />\n        <div className=\"uploadFileComponents\">\n          <TextField id=\"standard-basic\" className=\"imageupload_caption\" label=\"Enter a caption\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setCaption(event.target.value)} value={caption} />\n        </div>\n\n        <div className=\"uploadFileComponents\">\n          <label htmlFor=\"contained-button-file\">\n            <Input accept=\"image/*\" id=\"contained-button-file\" type=\"file\" onChange={handleChange}\n            />\n          </label>\n\n          <div className=\"uploadFileComponents\">\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Camera Type\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setCameraType(event.target.value)} value={cameraType} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter ISO\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setISO(event.target.value)} value={ISO} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Exposure\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setExposure(event.target.value)} value={exposure} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter fStop\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setFStop(event.target.value)} value={fStop} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Shutter Speed\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setShutterSpeed(event.target.value)} value={shutterSpeed} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Specify Focus\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setSpecifyFocus(event.target.value)} value={specifyFocus} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Verical Tilt\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setVerticalTilt(event.target.value)} value={verticalTilt} />\n            <TextField className=\"imageupload_photoInfo\" label=\"Enter Zoom Factor\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setZoomFactor(event.target.value)} value={zoomFactor} />\n            <TextField className=\"imageupload_photoInfo_other\" label=\"Enter Other Info\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setOther(event.target.value)} value={other} />\n\n          </div>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleUpload}>\n            Upload\n          </Button>\n        </div>\n\n      </div>\n    </ThemeProvider>\n  )\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blue[500],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: red[500],\n    },\n  },\n});\n\n\nexport default ImageUpload\n","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/firebase.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Post.js",["86"],"import React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { collection, onSnapshot, doc, addDoc, serverTimestamp, FieldValue, orderBy, query, updateDoc } from 'firebase/firestore';\nimport { db, collectPosts } from './firebase'\nimport { Button, Input } from '@material-ui/core';\nimport CameraIcon from '@mui/icons-material/Camera';\nimport AddCommentIcon from '@mui/icons-material/AddComment';\n\nfunction Post({ postId, username, user, caption, imageUrl, iso, cameraType, exposure, fStop, shutterSpeed, specifyFocus, verticalTilt, zoomFactor, captures}) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    useEffect(() => {\n        let unsubscribe;\n        if (postId) {\n            unsubscribe = onSnapshot(query(collection(doc(collectPosts, postId), 'comments'), orderBy('timestamp', 'desc')), (snapshot) => {\n                setComments(snapshot.docs.map((doc) => doc.data()));\n            });\n        }\n        return () => {\n            unsubscribe();\n        };\n    }, [postId])\n\n    const postComment = (event) => {\n        event.preventDefault();\n        addDoc(collection(doc(collectPosts, postId), 'comments'), {\n            text: comment,\n            username: user.displayName,\n            timestamp: serverTimestamp(FieldValue)\n        });\n        setComment('');\n    }\n\n    const addCapture = (event) => {\n        event.preventDefault();\n        const current_post = doc(collectPosts, postId);\n        updateDoc(current_post, {\n            captures: captures+1\n        });\n    }\n\n    return (\n        <div className=\"post\">\n            <div className=\"post_header\"> \n                <Avatar\n                    className=\"post_avatar\"\n                    alt={username}\n                    src={\"/static/images/avatar/1.jpg\"}\n                />\n                <h3> {username} </h3>\n            </div>\n\n\n            {/*<img className=\"post_image\" src={imageUrl} alt=\"\" />*/}\n\n            <div className=\"inner-post\">\n\n                <img id=\"img\" className=\"image\" src={imageUrl} alt=\"\" />\n\n                <h4 className='info1'>Camera Type: {cameraType} </h4>\n                <h4 className='info2'>ISO: {iso} </h4>\n                <h4 className='info3'>Exposure: {exposure} </h4>\n                <h4 className='info4'>f-Stop: {fStop} </h4>\n                <h4 className='info5'>Shutter Speed: {shutterSpeed} </h4>\n                <h4 className='info6'>Specify Focus: {specifyFocus} </h4>\n                <h4 className='info7'>Vertical Tilt: {verticalTilt} </h4>\n                <h4 className='info8'>Zoom Factor: {zoomFactor} </h4>\n\n            </div>\n            \n            <br></br>\n            <div className='post_like_comment'>\n                <Button onClick={addCapture}><CameraIcon /></Button>\n                <Button className='b'><AddCommentIcon /></Button>\n            </div>\n            <br></br>\n            <div>\n                <h4 className=\"post_captures\"><strong> {captures} captures </strong></h4>\n            </div>\n\n            <h4 className=\"post_text\"> <strong>{ username }</strong> { caption }</h4>\n\n            {/* 93728 comments... -> when clicked on opens a scrollable modal with the comments */}\n\n            <div className='post_comments'>\n                {comments.map((comment) => (\n                    <h4 className='a_comment'> <strong>{comment.username}</strong> {comment.text} </h4>\n                ))}\n            </div>\n\n            {user && (\n                <form className='post_commentbox'>\n                    <Input\n                        id='t'\n                        className='post_input'\n                        type='text'\n                        placeholder='Add a comment...'\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                    />\n                    <Button\n                        className=\"post_button\"\n                        disabled={!comment}\n                        type='submit'\n                        onClick={postComment}\n                    >Post</Button>\n                </form>\n            )}\n\n        </div>\n    )\n}\n\nexport default Post","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/components/AppDrawer.jsx",["87","88"],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Login.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Profile.js",["89","90","91","92","93","94"],"import React, { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, Button, Input, makeStyles, Typography, IconButton, Grid, Card, CardHeader, CardContent } from '@material-ui/core';\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\nimport CameraIcon from '@mui/icons-material/Camera';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport IsoIcon from '@mui/icons-material/Iso';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst sampleBackgroundImage = 'sampleProfilePicture.jpg'\n\nfunction Profile({ user, username }) {\n  const classes = useStyles();\n  //! Replace p tags with information from Firebase\n  return (\n    <>\n      <Grid container spacing={2} className={classes.grid} >\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Card className={classes.root}>\n              <CardHeader className={classes.header} title={username ? username : \"UserName\"}\n                action={\n                  <IconButton aria-label=\"settings\" clasName={classes.iconColor}>\n                    <CameraAltIcon />\n                  </IconButton>\n                }\n              />\n              <CardContent className={classes.cardHover}>\n                <Typography variant=\"body2\" gutterBottom className={classes.displayText}>\n                  <div className=\"showText\">\n                    <div className={classes.cameraInfo}>\n                      <CameraIcon />\n                      <p> f/4</p>\n                    </div>\n                    <div className={classes.cameraInfo}>\n                      <TimerIcon />\n                      <p> 1/125 sec</p>\n                    </div>\n                    <div className={classes.cameraInfo}>\n                      <IsoIcon />\n                      <p> 300 </p>\n                    </div>\n                    <div className={classes.cameraInfo}>\n                      <VisibilityIcon />\n                      <p> 97.0 mm</p>\n                    </div>\n                  </div>\n\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    width: 256,\n    height: 256,\n    marginTop: \"100px\",\n    borderRadius: \"20px\",\n    background: `url(${sampleBackgroundImage})`,\n    backgroundSize: \"100%\",\n    color: \"rgba(255, 255, 255, 1) !important\",\n    \"& p, span\": {\n      display: \"none\"\n    },\n    \"&:hover\": {\n      \"& p, span\": {\n        display: \"block\",\n      }\n    }\n  },\n\n  header: {\n    color: \"rgba(0, 0, 0, 1) !important\",\n  },\n\n  iconColor: {\n    color: \"rgba(255,255, 255, 1) !important\"\n  },\n\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n  },\n  grid: {\n    background: \"#afeeee\",\n    height: \"100vh\",\n  },\n  displayText: {\n    visiblilty: 'hidden',\n  },\n  cardHover: {\n    position: 'relative',\n    overflow: 'hidden',\n    \"&:hover\": {\n      backgroundColor: \"rgba(0,0,0,0.3)\",\n      color: \"rgba(137, 196, 244, 1)\",\n      \"& p\": {\n        visibility: \"visible\",\n      }\n    }\n  },\n\n  cameraInfo: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    paddingTop: \"5px\",\n    \"& p\": {\n      paddingLeft: \"6px\",\n      fontSize: \"13px\",\n      fontWeight: \"bolder\",\n      // backgroundColor: \"red\"\n    }\n  }\n\n  // // \"*:after\": {\n  // //   boxSizing: \"border-box\",\n  // //   margin: 0,\n  // //   padding: 0,\n  // // },\n\n  // container: {\n  //   width: \"85vw\",\n  //   margin: \"1rem auto\"\n\n  // },\n  // overlay: {\n  //   textAlign: \"center\",\n\n  // },\n  // // backDrop: {\n  // //   \"&:hover\": {\n  // //     filter: \"blur(3px)\",\n  // //     webkitFilter: \"blur(3px)\",\n  // //     transition: \".3s all\"\n  // //     // backgroundColor: \"rgba(0,0,30, 0.4)\",\n  // //   }\n  // // },\n\n  // bg: {\n  //   textAlign: \"center\",\n  //   float: \"left\",\n  //   maxWidth: \"31%\",\n  //   position: \"relative\",\n  //   margin: \".5%\",\n  //   \"& img\": {\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //     marginBottom: \"-4px\",\n  //   },\n  //   overlay: {\n  //     position: \"absolute\",\n  //     top: 0,\n  //     left: 0,\n  //     bottom: 0,\n  //     width: \"100%\",\n  //     background: \"$bg\",\n  //     color: \"#fff\",\n  //     opacity: 0,\n  //     \"&:hover\": {\n  //       opacity: 1,\n  //     },\n  //     \"& h2\": {\n  //       paddingTop: \"20%\",\n  //     },\n  //     \"& p\": {\n  //     }\n  //   },\n  //   \"&:hover\": {\n  //     \"& img\": {\n  //       webkitFilter: \"{blur(2px)}\",\n  //       filter: \"blur(2px)\",\n  //     }\n  //   }\n  // }\n\n\n}));\n\n\nexport default Profile","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Navbar.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Settings.js",[],"/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signup.js",["95"],"import React, { useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, updateProfile, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from './firebase'\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport './Signup.css'\n\nfunction Signup() {\n    let history = useHistory();\n\n    const toSignIn = () => {\n        history.push('/login')\n    }\n\n    const toMain = () => {\n        history.push('/')\n    } \n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [user, setUser] = useState(null);\n\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n          if (authUser) {\n            // user logged in\n            console.log(authUser);\n            setUser(authUser);\n    \n            if (authUser.displayName) {\n              // do not update username\n            } else {\n              // NEW USER\n              return updateProfile(authUser, {\n                displayName: username,\n              });\n            }\n    \n          } else {\n            // user logged out\n            setUser(null);\n          }\n        })\n        return () => {\n          // some cleanup action\n          unsubscribe();\n        }\n      }, [user, username]);\n\n\n    const signUp = (event) => {\n        event.preventDefault();\n    \n        createUserWithEmailAndPassword(auth, email, password)\n          .then((authUser) => {\n            return updateProfile(authUser.user, {\n              displayName: username\n            })\n          })\n          .catch((error) => alert(error.message));\n    }\n\n    return(\n      <div className=\"wrap\" >\n        <Navbar></Navbar>\n        <div className=\"login\">\n            <div className=\"sign-in\" style={{ backgroundImage: \"url(/bg.jpg)\" }}>\n                <form className=\"sign-in-form\">\n                    <div className=\"section\">\n                        <div className=\"heading\">\n                            <h4 className=\"begin\">Sign up for </h4>\n                            <h3 className=\"title\"> Lens Cleanse </h3>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"section\">\n                        <input id=\"user\" type=\"text\" className=\"section-input\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} ></input>\n                    </div>\n                    <div className=\"section\">\n                        <input id=\"user\" type=\"text\" className=\"section-input\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} ></input>\n                    </div>\n                    <div className=\"section\">\n                        <input id=\"user\" type=\"password\" className=\"section-input\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} ></input>\n                    </div>\n                    <div className=\"section\">\n                        <button type=\"submit\" className=\"section-button\" onClick={signUp}> SIGN UP </button>\n                    </div>\n\n                    <br></br>\n                    <br></br>\n                    <div className=\"section\">\n                        <p class=\"text\">&mdash; Already Have an Account? &mdash;</p>\n                    </div>\n                    <div class=\"section\">\n                        <button className=\"bottom-buttons\" onClick={toSignIn}>SIGN IN</button>\n                        <button className=\"bottom-buttons\" onClick={toMain}>MAIN PAGE</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Signup;","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/About.js",["96","97","98","99"],"import React, { useState, useEffect } from 'react';\nimport { Button, Input } from '@material-ui/core';\n\n\nfunction About() {\n    return (\n        <h3> This is the About Page </h3>\n    )\n}\n\nexport default About","/Users/nursimadonuk/Desktop/CS-Capstone-Project/LensCleanseApp/src/Signin.js",["100","101","102","103"],"import React, { useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, updateProfile, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from './firebase'\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport './Signin.css'\n\nfunction Signin() {\n    let history = useHistory();\n\n    const toSignUp = () => {\n        history.push('/signup')\n    }\n\n    const toMain = () => {\n        history.push('/')\n    } \n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [user, setUser] = useState(null);\n    const [signinpassword, setSigninPassword] = useState('');\n    const [signinemail, setSigninEmail] = useState('');\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n          if (authUser) {\n            // user logged in\n            console.log(authUser);\n            setUser(authUser);\n    \n            if (authUser.displayName) {\n              // do not update username\n            } else {\n              // NEW USER\n              return updateProfile(authUser, {\n                displayName: username,\n              });\n            }\n    \n          } else {\n            // user logged out\n            setUser(null);\n          }\n        })\n        return () => {\n          // some cleanup action\n          unsubscribe();\n        }\n      }, [user, username]);\n\n    const signIn = (event) => {\n        event.preventDefault();\n    \n        signInWithEmailAndPassword(auth, signinemail, signinpassword)\n          .catch((error) => alert(error.message))\n\n        if(user) {\n            history.push('/');\n        } \n        \n        else {\n            // not sure if this is a good idea\n            setSigninPassword('');\n            setSigninEmail('');\n        } \n    }\n\n    const signUp = (event) => {\n        event.preventDefault();\n    \n        createUserWithEmailAndPassword(auth, email, password)\n          .then((authUser) => {\n            return updateProfile(authUser.user, {\n              displayName: username\n            })\n          })\n          .catch((error) => alert(error.message));\n    }\n\n    return(\n        <div className=\"wrap\" >\n            <Navbar></Navbar>\n            <div className=\"login\">\n                <div className=\"sign-in\" style={{ backgroundImage: \"url(/bg.jpg)\" }}>\n                    <form className=\"sign-in-form\">\n                        <div className=\"section\">\n                            <div className=\"heading\">\n                                <h4 className=\"begin\">Log In to </h4>\n                                <h3 className=\"title\"> Lens Cleanse </h3>\n                            </div>\n                        </div>\n                        <br></br>\n                        <div className=\"section\">\n                            <input id=\"user\" type=\"text\" className=\"section-input\" placeholder=\"Email\" value={signinemail} onChange={(e) => setSigninEmail(e.target.value)} ></input>\n                        </div>\n                        <div className=\"section\">\n                            <input id=\"user\" type=\"password\" className=\"section-input\" placeholder=\"Password\" value={signinpassword} onChange={(e) => setSigninPassword(e.target.value)} ></input>\n                        </div>\n                        <div className=\"section\">\n                            <button type=\"submit\" className=\"section-button\" onClick={signIn}> SIGN IN </button>\n                        </div>\n                        <div className=\"section\">\n                            <div className=\"bottom\">\n                                <div className=\"remember\">\n                                    <input className=\"remember-check\" type=\"checkbox\" id=\"remember\" name=\"remember\" value=\"remember\"/>\n                                    <label className=\"remember-me\" for=\"remember\"> Remember Me</label>\n                                </div>\n                                <div className=\"forgot\">\n                                    <a href=\"#forgot\">Forgot Password</a>\n                                </div>\n                            </div>\n\t                    </div>\n                        <br></br>\n                        <br></br>\n                        <div className=\"section\">\n                            <p class=\"text\">&mdash; Don't Have an Account &mdash;</p>\n                        </div>\n                        <div class=\"section\">\n                            <button className=\"bottom-buttons\" onClick={toSignUp}>SIGN UP</button>\n                            <button className=\"bottom-buttons\" onClick={toMain}>MAIN PAGE</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Signin;",{"ruleId":"104","severity":1,"message":"105","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":13},{"ruleId":"104","severity":1,"message":"108","line":13,"column":42,"nodeType":"106","messageId":"107","endLine":13,"endColumn":50},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"104","severity":1,"message":"113","line":5,"column":38,"nodeType":"106","messageId":"107","endLine":5,"endColumn":47},{"ruleId":"104","severity":1,"message":"114","line":7,"column":27,"nodeType":"106","messageId":"107","endLine":7,"endColumn":33},{"ruleId":"104","severity":1,"message":"115","line":7,"column":35,"nodeType":"106","messageId":"107","endLine":7,"endColumn":40},{"ruleId":"104","severity":1,"message":"108","line":7,"column":42,"nodeType":"106","messageId":"107","endLine":7,"endColumn":50},{"ruleId":"104","severity":1,"message":"116","line":7,"column":52,"nodeType":"106","messageId":"107","endLine":7,"endColumn":58},{"ruleId":"104","severity":1,"message":"117","line":8,"column":10,"nodeType":"106","messageId":"107","endLine":8,"endColumn":16},{"ruleId":"104","severity":1,"message":"118","line":8,"column":18,"nodeType":"106","messageId":"107","endLine":8,"endColumn":23},{"ruleId":"104","severity":1,"message":"119","line":8,"column":37,"nodeType":"106","messageId":"107","endLine":8,"endColumn":42},{"ruleId":"104","severity":1,"message":"120","line":11,"column":8,"nodeType":"106","messageId":"107","endLine":11,"endColumn":19},{"ruleId":"104","severity":1,"message":"121","line":13,"column":10,"nodeType":"106","messageId":"107","endLine":13,"endColumn":24},{"ruleId":"104","severity":1,"message":"122","line":16,"column":9,"nodeType":"106","messageId":"107","endLine":16,"endColumn":16},{"ruleId":"104","severity":1,"message":"123","line":18,"column":20,"nodeType":"106","messageId":"107","endLine":18,"endColumn":31},{"ruleId":"104","severity":1,"message":"124","line":6,"column":28,"nodeType":"106","messageId":"107","endLine":6,"endColumn":42},{"ruleId":"104","severity":1,"message":"125","line":6,"column":52,"nodeType":"106","messageId":"107","endLine":6,"endColumn":62},{"ruleId":"104","severity":1,"message":"126","line":27,"column":9,"nodeType":"106","messageId":"107","endLine":27,"endColumn":18},{"ruleId":"104","severity":1,"message":"127","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":12},{"ruleId":"104","severity":1,"message":"128","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"118","line":10,"column":10,"nodeType":"106","messageId":"107","endLine":10,"endColumn":15},{"ruleId":"104","severity":1,"message":"129","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"128","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"130","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":16},{"ruleId":"104","severity":1,"message":"131","line":2,"column":18,"nodeType":"106","messageId":"107","endLine":2,"endColumn":31},{"ruleId":"104","severity":1,"message":"117","line":2,"column":33,"nodeType":"106","messageId":"107","endLine":2,"endColumn":39},{"ruleId":"104","severity":1,"message":"118","line":2,"column":41,"nodeType":"106","messageId":"107","endLine":2,"endColumn":46},{"ruleId":"104","severity":1,"message":"132","line":2,"column":77,"nodeType":"106","messageId":"107","endLine":2,"endColumn":103},{"ruleId":"104","severity":1,"message":"129","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"128","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"117","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":16},{"ruleId":"104","severity":1,"message":"118","line":2,"column":18,"nodeType":"106","messageId":"107","endLine":2,"endColumn":23},{"ruleId":"104","severity":1,"message":"123","line":19,"column":22,"nodeType":"106","messageId":"107","endLine":19,"endColumn":33},{"ruleId":"104","severity":1,"message":"133","line":20,"column":22,"nodeType":"106","messageId":"107","endLine":20,"endColumn":33},{"ruleId":"104","severity":1,"message":"134","line":21,"column":19,"nodeType":"106","messageId":"107","endLine":21,"endColumn":27},{"ruleId":"104","severity":1,"message":"135","line":70,"column":11,"nodeType":"106","messageId":"107","endLine":70,"endColumn":17},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'Timestamp' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'Modal' is defined but never used.","'ImageUpload' is defined but never used.","'popoverClasses' is defined but never used.","'classes' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'LinearProgress' is defined but never used.","'IconButton' is defined but never used.","'fileInput' is assigned a value but never used.","'db' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Dialog' is defined but never used.","'DialogContent' is defined but never used.","'signInWithEmailAndPassword' is defined but never used.","'setPassword' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'signUp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]