[{"/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/index.js":"1","/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/App.js":"2","/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/reportWebVitals.js":"3","/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/Post.js":"4","/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/firebase.js":"5","/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js":"6","/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/components/AppDrawer.jsx":"7"},{"size":500,"mtime":1632716724855,"results":"8","hashOfConfig":"9"},{"size":6505,"mtime":1633283267093,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1632716724855,"results":"11","hashOfConfig":"9"},{"size":663,"mtime":1632716724854,"results":"12","hashOfConfig":"9"},{"size":867,"mtime":1632716724854,"results":"13","hashOfConfig":"9"},{"size":3679,"mtime":1632725574257,"results":"14","hashOfConfig":"9"},{"size":1777,"mtime":1633282970086,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"faz257",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/index.js",[],["32","33"],"/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/App.js",[],"/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/reportWebVitals.js",[],"/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/Post.js",[],"/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/firebase.js",[],"/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/ImageUpload.js",["34","35","36","37"],"// import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { storage, collectPosts } from './firebase';\nimport { ref, getDownloadURL } from 'firebase/storage';\nimport { serverTimestamp, FieldValue } from 'firebase/firestore';\nimport { TextField, Input, LinearProgress, Button, IconButton, } from \"@material-ui/core\"\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport \"./Post.css\"\n\nfunction ImageUpload({ username }) {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState('');\n\n\n  const fileInput = React.createRef()\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    //************** NEEDS TO BE FIXED: put ***************/\n    if (!image || !caption) {\n      alert('PLEASE MAKE SURE YOU ENTERED BOTH IMAGE AND CAPTION')\n    }\n    else {\n      const uploadTask = ref(storage, `images/${image.name}`).put(image);\n      // const uploadTask = ref(storage, `images/${image.name}`);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          // progress function\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n          alert(error.message);\n        },\n        () => {\n          // complete function\n          //************** NEEDS TO BE FIXED: child ***************/\n          getDownloadURL(ref(storage, \"images\").child(image.name))\n            .then(url => {\n              collectPosts.add({\n                timestamp: serverTimestamp(FieldValue),\n                caption: caption,\n                imageUrl: url,\n                username: username\n              });\n\n              setProgress(0);\n              setCaption(\"\");\n              setImage(null);\n\n            })\n\n        }\n\n      )\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"uploadFiles\">\n        {/* <progress className=\"imageupload_progress\" value={progress} max=\"100\" /> */}\n\n        {/* <input type=\"text\" placeholder=\"Enter a caption...\" onChange={event => setCaption(event.target.value)} value={caption} /> */}\n        {/* <Input type=\"file\" onChange={handleChange} /> */}\n        {/* <input type=\"file\" onChange={handleChange} /> */}\n\n        <div className=\"uploadFileComponents\">\n          <label htmlFor=\"contained-button-file\">\n            <Input accept=\"image/*\" id=\"contained-button-file\" type=\"file\" onChange={handleChange}\n              style={{ display: \"none\" }}\n            />\n            <Button variant=\"contained\" component=\"span\">\n              Choose File\n            </Button>\n          </label>\n        </div>\n        <div className=\"uploadFileComponents\">\n          <div>\n            <TextField id=\"standard-basic\" className=\"TextBox\" label=\"Enter a caption\" defaultValue=\"Small\" size=\"small\" variant=\"filled\" onChange={event => setCaption(event.target.value)} value={caption} />\n          </div>\n        </div>\n        <div className=\"uploadFileComponents\">\n          <Button variant=\"contained\" color=\"primary\" onClick={handleUpload}>\n            Upload\n          </Button>\n        </div>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: blue[500],\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: red[500],\n    },\n  },\n});\n\n\nexport default ImageUpload\n","/Users/saad/CODINGFolder/postCourseProgramming/backEndPractice/practice2/CS-Capstone-Project/LensCleanseApp/src/components/AppDrawer.jsx",["38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":6,"column":28,"nodeType":"45","messageId":"46","endLine":6,"endColumn":42},{"ruleId":"43","severity":1,"message":"47","line":6,"column":52,"nodeType":"45","messageId":"46","endLine":6,"endColumn":62},{"ruleId":"43","severity":1,"message":"48","line":13,"column":10,"nodeType":"45","messageId":"46","endLine":13,"endColumn":18},{"ruleId":"43","severity":1,"message":"49","line":17,"column":9,"nodeType":"45","messageId":"46","endLine":17,"endColumn":18},{"ruleId":"43","severity":1,"message":"50","line":8,"column":8,"nodeType":"45","messageId":"46","endLine":8,"endColumn":20},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'LinearProgress' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'progress' is assigned a value but never used.","'fileInput' is assigned a value but never used.","'ListItemIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]